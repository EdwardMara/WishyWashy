{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Footer.js","components/Landing.js","components/TextFieldGroup.js","components/RegisterWorker.js","components/RegisterManager.js","components/LoginWorker.js","components/LoginManager.js","components/HelloWorker.js","utils/API.js","components/List/index.js","components/HelloManager.js","components/LoginNavbar.js","components/WorkerDash.js","components/NewJobForm.js","components/workerListItem/index.js","components/workersList.js","App.js","serviceWorker.js","index.js","utils/isEmpty.js","logo.svg"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","initialState","isAuthenticated","isWorker","isManager","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","isEmpty","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Footer","react_default","a","createElement","className","Date","getFullYear","href","Landing","react_router_dom","to","Component","connect","TextFieldGroup","_ref","name","placeholder","value","error","info","onChange","disabled","classnames","is-invalid","defaultProps","RegisterWorker","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firstName","lastName","address","phone","email","password","password2","bind","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","preventDefault","newWorker","props","registerWorker","history","noValidate","components_TextFieldGroup","data","dispatch","post","then","res","push","catch","err","response","withRouter","RegisterManager","companyName","newManager","registerManager","LoginWorker","evt","loginWorker","localStorage","setItem","jwt_decode","LoginManager","loginManager","console","log","HelloWorker","API","getJoblist","get","postJob","object","getManager","id","concat","takeJob","jobid","workerid","getWorker","workerGrab","List","children","ListItem","onClick","handleClick","identifier","src","img","height","width","alt","position","pay","hours","HelloManager","manager","Jobs","handleInputChange","event","handleOnClick","job","_this2","_this3","map","key","indentifier","Navbar","logout","authLinks","onLogoutClick","guestLinks","style","margin","display","data-toggle","data-target","removeItem","WorkerDash","jobs","jobList","worker","loadJobs","NewJobForm","handleFormSubmit","ManagerId","window","location","assign","message","for","WorkerUList","WorkerListItem","WorkerList","jobId","match","params","Workers","App","role","es","basename","LoginNavbar","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","keys","trim","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3e92650d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  }\n  else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register Worker\nexport const registerWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/register', data)\n    .then(res => history.push('/loginWorker'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Register Manager\nexport const registerManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/register', data)\n      .then(res => history.push('/loginManager'))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  \n  // Login Worker - Get User Token\nexport const loginWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/login', data)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data;\n      // Set token to ls\n      localStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n\n      history.push('/helloWorker');\n    }).catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response\n      })\n    );\n};\n\n  // Login Manager - Get User Token\n  export const loginManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/login', data)\n      .then(res => {\n        // Save to localStorage\n        const { token } = res.data;\n        // Set token to ls\n        localStorage.setItem('jwtToken', token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n\n        history.push('/helloManager');\n      })\n      .catch(err => {\n        console.log(err);\n        \n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response\n        })\n      });\n  };\n  \n  // Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logout = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const FETCH_STARRED = 'FETCH_STARRED';\n\n","import isEmpty from '../utils/isEmpty';\n\nimport { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isWorker: false,\n  isManager: false,\n  user: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        isWorker: action.payload.isWorker,\n        isManager: action.payload.isManager,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case CLEAR_ERRORS:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\n\n// MUST COMMENT OUT BEFORE DEPLOYING\n// UNCOMMENT FOR CHROME DEV REDUX TOOL\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   compose(\n//     applyMiddleware(...middleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n\nexport default store;\n","import React from 'react';\n\nexport default () => {\n    return (\n        <footer className = \"bg-light text-dark mt-5 p-4 text-center\">\n            <p>\n            Copyright &copy; { new Date().getFullYear() } Wishy Washy\n            </p>\n            <a href='/termsAndConditions'>Terms &amp; Conditions</a>\n        </footer>\n    );\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Landing extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <h1 className=\"display-3 mb-4\">Wishy Washy</h1>\n            <Link to=\"/loginWorker\" className=\"btn btn-lg btn-primary mr-2\">\n              Worker Login\n            </Link>\n            <Link to=\"/loginManager\" className=\"btn btn-lg btn-primary mr-2\">\n              Manager Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div className=\"form-group\">\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n};\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextFieldGroup;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerWorker } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\n\nclass RegisterWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n        firstName: \"\",\n        lastName: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newWorker = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerWorker(newWorker, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Register</h1>\n              <p className=\"lead text-center\">\n                Create Worker account.\n              </p>\n              <form noValidate onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterWorker.propTypes = {\n  registerWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerWorker })(withRouter(RegisterWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\n\nclass RegisterManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n        firstName: \"\",\n        lastName: \"\",\n        companyName: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newManager = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      companyName: this.state.companyName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerManager(newManager, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Register</h1>\n              <p className=\"lead text-center\">\n                Create Manager account.\n              </p>\n              <form noValidate onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Company\"\n                  name=\"companyName\"\n                  value={this.state.companyName}\n                  onChange={this.onChange}\n                  error={errors.companyName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterManager.propTypes = {\n  registerManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerManager })(withRouter(RegisterManager));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { loginWorker } from '../actions/authActions';\nimport TextFieldGroup from './TextFieldGroup';\n\nclass LoginWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginWorker(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">\n                Log in to your Worker account\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                <a href=\"/registerWorker\">Register</a>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginWorker.propTypes = {\n  loginWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginWorker })(withRouter(LoginWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\n\nclass LoginManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginManager(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">\n                Log in to your Manager account\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                <a href=\"/registerManager\">Register</a>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginManager.propTypes = {\n  loginManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginManager })(withRouter(LoginManager));\n","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass HelloWorker extends Component {\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const { auth } = this.props;\n\n    return (\n      <div>\n        Hello Worker: {auth.user.email} \n      </div>\n    );\n  }\n}\n\nHelloWorker.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloWorker);\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getJoblist: function() {\n    return axios.get(\"https://wishywashy-api.herokuapp.com/api/joblist\");\n  },\n  postJob: function(object) {\n    return axios.post(\"https://wishywashy-api.herokuapp.com/api/createJob\", object);\n  },\n  getManager: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/manager/${id}`)\n  },\n  takeJob: function(jobid, workerid) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/takejob/${jobid}/${workerid}`)\n  },\n  getWorker: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/worker/${id}`)\n  },\n  workerGrab: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/job/workers/${id}`)\n  }\n};","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function List({ children }) {\n    return <section className=\"mw7 center avenir\">\n        <h2 className=\"baskerville fw1 ph3 ph0-l\">Jobs</h2>\n        {children}\n        </section>\n}\n\nexport function ListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1\" onClick={() => props.handleClick(props.identifier)}>\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                        <img src={props.img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of store/restaurant\" />\n                    </div>\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.position}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.pay} for {props.hours} hours\n          </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\nimport { List, ListItem } from \"./List\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass HelloManager extends Component {\n  state = {\n    manager: { Jobs: [] }\n  }\n\n  componentDidMount() {\n    const { auth } = this.props;\n    API.getManager(auth.user.id)\n      .then((manager) => {\n        this.setState({ manager: manager.data })\n      })\n      .catch()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleOnClick = (job) => {\n    console.log(job)\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Manager Dashboard</h2>\n        <Link to=\"/Manager/newJob\">\n          <button>Make a new Job!</button>\n        </Link>\n        <List>\n          {this.state.manager.Jobs.map(job => {\n            return (\n              <Link to={`/Manager/workerList/${job.id}`}>\n                <ListItem\n                  key={job.id}\n                  indentifier={job.id}\n                  position={job.position}\n                  address={job.address}\n                  pay={job.pay}\n                  hours={job.hours}\n                  handleClick={this.handleOnClick}\n                />\n              </Link>\n            )\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n\nHelloManager.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloManager);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n//import logo from '../../img/logo.png'\n\nclass Navbar extends Component {\n  onLogoutClick(evt) {\n    evt.preventDefault();\n    \n    this.props.logout();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a href=\"/\" onClick={ this.onLogoutClick.bind(this) } className=\"nav-link\">\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerWorker\">\n            Register Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerManager\">\n            Register Manager\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginWorker\">\n            Login Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginManager\">\n            Login Manager\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img\n              src=\"https://previews.123rf.com/images/tilo/tilo1212/tilo121200004/16829339-transparent-blue-soap-bubbles-over-white-background.jpg\"\n              style={{ width: '200px', margin: 'auto', display: 'block' }}\n              alt=\"Loading...\"\n            />\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            {isAuthenticated ? authLinks : guestLinks}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {logout})(withRouter(Navbar));\n","import React, { Component } from \"react\";\nimport { List, ListItem } from \"./List\";\n\nimport { connect } from 'react-redux';\n\nimport jobs from \"./jobs.json\";\nimport API from \"../utils/API\";\n\n\n\nclass WorkerDash extends Component {\n    state = {\n        jobs,\n        jobList: [],\n        worker: {}\n    };\n    \n    componentDidMount() {\n        this.loadJobs();\n        const { auth } = this.props;\n        API.getWorker(auth.user.id)\n        .then((worker) => {\n          this.setState({ worker: worker.data })\n        })\n        .catch()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth) {\n          this.setState({ auth: nextProps.auth });\n        }\n      }\n\n    loadJobs = () => {\n        API.getJoblist()\n            .then(res =>\n                this.setState({ jobList: res.data })\n            )\n            .catch(err => console.log(err));\n    };\n\n    handleOnClick = (job)=>{\n        API.takeJob(job, this.state.worker.id)\n        .then(\n            console.log('connection made')\n        )\n        .catch()\n    }\n\n\n    render() {\n        return (\n            <List>\n                {this.state.jobList.map(job => {\n                    return (\n                        <ListItem\n                            key={job.id}\n                            identifier={job.id}\n                            position={job.position}\n                            img={this.state.jobs[0].img}\n                            address={job.address}\n                            pay={job.pay}\n                            hours={job.hours}\n                            handleClick={this.handleOnClick}\n                        />\n                    )\n                })}\n            </List>\n\n\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps)(WorkerDash);","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\n\nclass NewJobForm extends Component {\n    state = {\n    }\n  \n    componentDidMount() {\n    }\n  \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth) {\n        this.setState({ auth: nextProps.auth });\n      }\n    }\n  \n    handleInputChange = event => {\n      this.setState({[event.target.name]: event.target.value})\n    }\n  \n    handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(this.state)\n      const { auth } = this.props;\n      const job = {\n        companyName: this.state.companyName,\n        position: this.state.position,\n        address: this.state.address,\n        pay: this.state.pay,\n        hours: this.state.hours,\n        ManagerId: auth.user.id\n      }\n      API.postJob(job)\n      .then(res => {\n        console.log(res)\n        window.location.assign('/helloManager')\n      })\n      .catch(err => this.setState({ error: err.message}))\n    }\n\n    render() {\n        \n    return (\n        <div>\n            <form>\n                <label for=\"companyName\">Company Name: </label>\n                <input name=\"companyName\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"position\">Position needed: </label>\n                <input name=\"position\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"address\">Address: </label>\n                <input name=\"address\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"pay\">Pay: </label>\n                <input name=\"pay\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"hours\">Hours: </label>\n                <input name=\"hours\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <button type=\"submit\" onClick={this.handleFormSubmit}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    )\n    }\n}\n\n\nNewJobForm.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  \n  export default connect(mapStateToProps)(NewJobForm);\n  \n","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function WorkerUList({ children }) {\n    return <section className=\"mw7 center avenir\">\n        <h2 className=\"baskerville fw1 ph3 ph0-l\">Jobs</h2>\n        {children}\n    </section>\n}\n\nexport function WorkerListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1\">\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.name}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.email}\n                            <br />\n                            {props.phone}\n                        </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}\n                                    // export function List() {\n                                    //     return (\n                                    //         <section className=\"mw7 center avenir\">\n                                    //             <h2 className=\"baskerville fw1 ph3 ph0-l\">Jobs</h2>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[0].img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[0].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[0].address}\n                                    //                                 <br />\n                                    //                                 {jobs[0].pay} for {jobs[0].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[1].img} height=\"200\" width=\"300\" className=\"db\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[1].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[1].address}\n                                    //                                 <br />\n                                    //                                 {jobs[1].pay} for {jobs[1].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[2].img} height=\"200\" width=\"300\" className=\"db\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[2].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[2].address}\n                                    //                                 <br />\n                                    //                                 {jobs[2].pay} for {jobs[2].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n\n                                    //         </section>\n                                    //     )\n                                    // }\n","import React, { Component } from \"react\";\nimport { WorkerUList, WorkerListItem } from \"./workerListItem\";\nimport { connect } from 'react-redux';\nimport API from \"../utils/API\";\n\nclass WorkerList extends Component {\n    state = {\n      jobId: this.props.match.params.id,\n      job: { Workers:[] }\n    }\n\n    componentDidMount() {\n      API.workerGrab(this.state.jobId)\n      .then((job) => {\n        this.setState({ job: job.data })\n      })\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth) {\n          this.setState({ auth: nextProps.auth });\n        }\n      }\n\n    render() {\n        return (\n            <div>\n              <WorkerUList>\n                {this.state.job.Workers.map(worker => {\n                  return (\n                    <WorkerListItem \n                    name={worker.firstName+ \" \" + worker.lastName}\n                    address={worker.address}\n                    email={worker.email}\n                    phone={worker.phone}\n                    />\n                  )\n                })}\n              </WorkerUList>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps)(WorkerList);","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar/index';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logout } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n// import WorkerRoute from \"./utils/WorkerRoute\";\n// import ManagerRoute from \"./utils/ManagerRoute\";\n\nimport Footer from \"./components/Footer\";\nimport Landing from \"./components/Landing\";\nimport RegisterWorker from \"./components/RegisterWorker\";\nimport RegisterManager from \"./components/RegisterManager\";\nimport LoginWorker from \"./components/LoginWorker\";\nimport LoginManager from \"./components/LoginManager\";\nimport HelloWorker from \"./components/HelloWorker\";\nimport HelloManager from \"./components/HelloManager\";\nimport LoginNavbar from \"./components/LoginNavbar\"\nimport WorkerDash from \"./components/WorkerDash\"\nimport NewJobForm from \"./components/NewJobForm\"\nimport WorkerList from \"./components/workersList\"\n\n\nclass App extends Component {\n\n\n  state = {\n    role: \"employer\"\n  }\n  // control the role and render diferent page base on the role\n  // call to the backend  return from the db all the jobs\n  // update state jobs with the data comming from the db then you will render result\n\n\n  render() {\n    return (\n      <div>\n        <Provider store={store}>\n          <Router\n            basename=\"/WishyWashy\"\n          >\n            <div className=\"App\">\n              <LoginNavbar />\n              <Route exact path=\"/\" component={Landing} />\n              <div className=\"container\">\n                <Route exact path=\"WishyWashy/registerWorker\" component={RegisterWorker} />\n                <Route exact path=\"WishyWashy/registerManager\" component={RegisterManager} />\n                <Route exact path=\"WishyWashy/loginWorker\" component={LoginWorker} />\n                <Route exact path=\"WishyWashy/loginManager\" component={LoginManager} />\n                <Route exact path=\"WishyWashy/helloWorker\" component={WorkerDash} />\n                <Route path=\"WishyWashy/helloManager\" component={HelloManager} />\n                <Route exact path=\"WishyWashy/Manager/newJob\" component={NewJobForm} />\n                <Route exact path=\"WishyWashy/Manager/workerList/:id\" component={WorkerList} />\n              </div>\n              <Footer />\n            </div>\n          </Router>\n        </Provider>\n      </div>\n    )\n  };\n\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nmodule.exports = isEmpty;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}