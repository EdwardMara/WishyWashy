{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/Footer.js","utils/WorkerRoute.js","utils/ManagerRoute.js","components/Landing.js","components/TextFieldGroup.js","components/RegisterWorker.js","components/RegisterManager.js","components/LoginWorker.js","components/LoginManager.js","components/HelloWorker.js","utils/API.js","components/List/index.js","components/HelloManager.js","components/LoginNavbar.js","components/WorkerDash.js","components/NewJobForm.js","App.js","serviceWorker.js","index.js","utils/isEmpty.js","logo.svg"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","initialState","isAuthenticated","isWorker","isManager","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","isEmpty","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Footer","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","className","Date","getFullYear","href","Landing","react_router_dom","TextFieldGroup","name","placeholder","value","error","info","onChange","disabled","classnames","is-invalid","defaultProps","RegisterWorker","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firstName","lastName","address","phone","email","password","password2","bind","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","preventDefault","newWorker","registerWorker","history","noValidate","components_TextFieldGroup","data","dispatch","post","then","res","push","catch","err","response","withRouter","RegisterManager","companyName","newManager","registerManager","LoginWorker","evt","loginWorker","sessionStorage","setItem","jwt_decode","LoginManager","loginManager","Button","Link","raised","console","log","HelloWorker","API","getJoblist","get","postJob","object","getManager","id","concat","takeJob","jobid","workerid","getWorker","workerGrab","List","children","ListItem","src","img","height","width","alt","position","pay","hours","HelloManager","manager","Jobs","handleInputChange","event","_this2","map","job","key","indentifier","Navbar","logout","authLinks","onClick","onLogoutClick","guestLinks","style","margin","display","data-toggle","data-target","removeItem","WorkerDash","jobs","jobList","worker","loadJobs","handleOnClick","_this3","identifier","handleClick","NewJobForm","handleFormSubmit","ManagerId","window","location","message","for","App","role","es","basename","LoginNavbar","exact","path","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","keys","trim","__webpack_require__","p"],"mappings":"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","file":"static/js/main.38153fe7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  }\n  else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register Worker\nexport const registerWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/register', data)\n    .then(res => history.push('/loginWorker'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Register Manager\nexport const registerManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/register', data)\n      .then(res => history.push('/loginManager'))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  \n  // Login Worker - Get User Token\nexport const loginWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/login', data)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data;\n      // Set token to ls\n      sessionStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n\n      history.push('/helloWorker');\n    }).catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response\n      })\n    );\n};\n\n  // Login Manager - Get User Token\n  export const loginManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/login', data)\n      .then(res => {\n        // Save to localStorage\n        const { token } = res.data;\n        // Set token to ls\n        sessionStorage.setItem('jwtToken', token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n\n        history.push('/helloManager');\n      })\n      .catch(err => {\n        console.log(err);\n        \n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response\n        })\n      });\n  };\n  \n  // Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logout = () => dispatch => {\n  // Remove token from localStorage\n  sessionStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const FETCH_STARRED = 'FETCH_STARRED';\n\n","import isEmpty from '../utils/isEmpty';\n\nimport { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isWorker: false,\n  isManager: false,\n  user: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        isWorker: action.payload.isWorker,\n        isManager: action.payload.isManager,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case CLEAR_ERRORS:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\n\n// MUST COMMENT OUT BEFORE DEPLOYING\n// UNCOMMENT FOR CHROME DEV REDUX TOOL\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   compose(\n//     applyMiddleware(...middleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n\nexport default store;\n","import React from 'react';\n\nexport default () => {\n    return (\n        <footer className = \"bg-light text-dark mt-5 p-4 text-center\">\n            <p>\n            Copyright &copy; { new Date().getFullYear() } Wishy Washy\n            </p>\n            <a href='WishyWashy/termsAndConditions'>Terms &amp; Conditions</a>\n        </footer>\n    );\n};","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst WorkereRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (auth.isAuthenticated === true && auth.isWorker === true) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/loginWorker\" />\n      )\n    }\n  />\n);\n\nWorkereRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(WorkereRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst ManagerRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (auth.isAuthenticated === true && auth.isManager === true) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/loginManager\" />\n      )\n    }\n  />\n);\n\nManagerRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(ManagerRoute);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Landing extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <h1 className=\"display-3 mb-4\">Wishy Washy</h1>\n            <Link to=\"/loginWorker\" className=\"btn btn-lg btn-primary mr-2\">\n              Worker Login\n            </Link>\n            <Link to=\"/loginManager\" className=\"btn btn-lg btn-primary mr-2\">\n              Manager Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div className=\"form-group\">\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n};\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextFieldGroup;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerWorker } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\n\nclass RegisterWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n        firstName: \"\",\n        lastName: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newWorker = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerWorker(newWorker, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Register</h1>\n              <p className=\"lead text-center\">\n                Create Worker account.\n              </p>\n              <form noValidate onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterWorker.propTypes = {\n  registerWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerWorker })(withRouter(RegisterWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\n\nclass RegisterManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n        firstName: \"\",\n        lastName: \"\",\n        companyName: \"\",\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newManager = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      companyName: this.state.companyName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerManager(newManager, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Register</h1>\n              <p className=\"lead text-center\">\n                Create Manager account.\n              </p>\n              <form noValidate onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Company\"\n                  name=\"companyName\"\n                  value={this.state.companyName}\n                  onChange={this.onChange}\n                  error={errors.companyName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterManager.propTypes = {\n  registerManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerManager })(withRouter(RegisterManager));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { loginWorker } from '../actions/authActions';\nimport TextFieldGroup from './TextFieldGroup';\nimport { Link } from 'react-router-dom';\n\nclass LoginWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginWorker(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">\n                Log in to your Worker account\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                <a href=\"WishyWashy/registerWorker\">Register</a>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginWorker.propTypes = {\n  loginWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginWorker })(withRouter(LoginWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport { Link } from 'react-router-dom';\n// import { withStyles, createStyleSheet } from 'material-ui/styles';\n// import Typography from 'material-ui/Typography';\nimport Button from '@material-ui/core/Button';\n// import muiLogo from 'docs/src/assets/images/material-ui-logo.svg';\n\nclass LoginManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginManager(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">\n                Log in to your Manager account\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                <Button\n                  component={Link}\n                  // className={classes.button}\n                  raised\n                  to=\"/registerManager\"\n                >\n                  {'Register'}\n                </Button>\n                {/* <a href=\"WishyWashy/registerManager\">Register</a> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginManager.propTypes = {\n  loginManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginManager })(withRouter(LoginManager));\n","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass HelloWorker extends Component {\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const { auth } = this.props;\n\n    return (\n      <div>\n        Hello Worker: {auth.user.email} \n      </div>\n    );\n  }\n}\n\nHelloWorker.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloWorker);\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getJoblist: function() {\n    return axios.get(\"https://wishywashy-api.herokuapp.com/api/joblist\");\n  },\n  postJob: function(object) {\n    return axios.post(\"https://wishywashy-api.herokuapp.com/api/createJob\", object);\n  },\n  getManager: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/manager/${id}`)\n  },\n  takeJob: function(jobid, workerid) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/takejob/${jobid}/${workerid}`)\n  },\n  getWorker: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/worker/${id}`)\n  },\n  workerGrab: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/job/workers/${id}`)\n  }\n};","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function List({ children }) {\n    return <section className=\"mw7 center avenir\">\n        <h2 className=\"baskerville fw1 ph3 ph0-l\">Jobs</h2>\n        {children}\n        </section>\n}\n\nexport function ListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1\">\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                        <img src={props.img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of store/restaurant\" />\n                    </div>\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.position}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.pay} for {props.hours} hours\n          </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\nimport { List, ListItem } from \"./List\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass HelloManager extends Component {\n  state = {\n    manager: { Jobs: [] }\n  }\n\n  componentDidMount() {\n    const { auth } = this.props;\n    API.getManager(auth.user.id)\n      .then((manager) => {\n        this.setState({ manager: manager.data })\n      })\n      .catch()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Manager Dashboard</h2>\n        <Link to=\"/Manager/newJob\">\n          <button>Make a new Job!</button>\n        </Link>\n        <List>\n          {this.state.manager.Jobs.map(job => {\n            return (\n              <Link to={`/Manager/workerList/${job.id}`}>\n                <ListItem\n                  key={job.id}\n                  indentifier={job.id}\n                  position={job.position}\n                  address={job.address}\n                  pay={job.pay}\n                  hours={job.hours}\n                />\n              </Link>\n            )\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n\nHelloManager.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloManager);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n//import logo from '../../img/logo.png'\n\nclass Navbar extends Component {\n  onLogoutClick(evt) {\n    evt.preventDefault();\n    \n    this.props.logout();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a href=\"/\" onClick={ this.onLogoutClick.bind(this) } className=\"nav-link\">\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerWorker\">\n            Register Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerManager\">\n            Register Manager\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginWorker\">\n            Login Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginManager\">\n            Login Manager\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img\n              src=\"https://previews.123rf.com/images/tilo/tilo1212/tilo121200004/16829339-transparent-blue-soap-bubbles-over-white-background.jpg\"\n              style={{ width: '200px', margin: 'auto', display: 'block' }}\n              alt=\"Loading...\"\n            />\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\">\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            {isAuthenticated ? authLinks : guestLinks}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {logout})(withRouter(Navbar));\n","import React, { Component } from \"react\";\nimport { List, ListItem } from \"./List\";\n\nimport { connect } from 'react-redux';\n\nimport jobs from \"./jobs.json\";\nimport API from \"../utils/API\";\n\n\n\nclass WorkerDash extends Component {\n    state = {\n        jobs,\n        jobList: [],\n        worker: {}\n    };\n    \n    componentDidMount() {\n        this.loadJobs();\n        const { auth } = this.props;\n        API.getWorker(auth.user.id)\n        .then((worker) => {\n          this.setState({ worker: worker.data })\n        })\n        .catch()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth) {\n          this.setState({ auth: nextProps.auth });\n        }\n      }\n\n    loadJobs = () => {\n        API.getJoblist()\n            .then(res =>\n                this.setState({ jobList: res.data })\n            )\n            .catch(err => console.log(err));\n    };\n\n    handleOnClick = (job)=>{\n        API.takeJob(job, this.state.worker.id)\n        .then(\n            console.log('connection made')\n        )\n        .catch()\n    }\n\n\n    render() {\n        return (\n            <List>\n                {this.state.jobList.map(job => {\n                    return (\n                        <ListItem\n                            key={job.id}\n                            identifier={job.id}\n                            position={job.position}\n                            img={this.state.jobs[0].img}\n                            address={job.address}\n                            pay={job.pay}\n                            hours={job.hours}\n                            handleClick={this.handleOnClick}\n                        />\n                    )\n                })}\n            </List>\n\n\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps)(WorkerDash);","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\n\nclass NewJobForm extends Component {\n    state = {\n    }\n  \n    componentDidMount() {\n    }\n  \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth) {\n        this.setState({ auth: nextProps.auth });\n      }\n    }\n  \n    handleInputChange = event => {\n      this.setState({[event.target.name]: event.target.value})\n    }\n  \n    handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(this.state)\n      const { auth } = this.props;\n      const job = {\n        companyName: this.state.companyName,\n        position: this.state.position,\n        address: this.state.address,\n        pay: this.state.pay,\n        hours: this.state.hours,\n        ManagerId: auth.user.id\n      }\n      API.postJob(job)\n      .then(res => {\n        console.log(res)\n        window.location.assign('/helloManager')\n      })\n      .catch(err => this.setState({ error: err.message}))\n    }\n\n    render() {\n        \n    return (\n        <div>\n            <form>\n                <label for=\"companyName\">Company Name: </label>\n                <input name=\"companyName\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"position\">Position needed: </label>\n                <input name=\"position\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"address\">Address: </label>\n                <input name=\"address\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"pay\">Pay: </label>\n                <input name=\"pay\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"hours\">Hours: </label>\n                <input name=\"hours\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <button type=\"submit\" onClick={this.handleFormSubmit}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    )\n    }\n}\n\n\nNewJobForm.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  \n  export default connect(mapStateToProps)(NewJobForm);\n  \n","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar/index';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logout } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport WorkerRoute from \"./utils/WorkerRoute\";\nimport ManagerRoute from \"./utils/ManagerRoute\";\n\nimport Footer from \"./components/Footer\";\nimport Landing from \"./components/Landing\";\nimport RegisterWorker from \"./components/RegisterWorker\";\nimport RegisterManager from \"./components/RegisterManager\";\nimport LoginWorker from \"./components/LoginWorker\";\nimport LoginManager from \"./components/LoginManager\";\nimport HelloWorker from \"./components/HelloWorker\";\nimport HelloManager from \"./components/HelloManager\";\nimport LoginNavbar from \"./components/LoginNavbar\"\nimport WorkerDash from \"./components/WorkerDash\"\nimport NewJobForm from \"./components/NewJobForm\"\n\n\nclass App extends Component {\n\n\n  state = {\n    role: \"employer\"\n  }\n  // control the role and render diferent page base on the role\n  // call to the backend  return from the db all the jobs\n  // update state jobs with the data comming from the db then you will render result\n\n\n  render() {\n    return (\n      <div>\n        <Provider store={store}>\n          <Router\n          basename=\"/WishyWashy\"\n          >\n            <div className=\"App\">\n              <LoginNavbar />\n              <Route exact path=\"/\" component={Landing} />\n              <div className=\"container\">\n                <Route exact path=\"/registerWorker\" component={RegisterWorker} />\n                <Route exact path=\"/registerManager\" component={RegisterManager} />\n                <Route exact path=\"/loginWorker\" component={LoginWorker} />\n                <Route exact path=\"/loginManager\" component={LoginManager} />\n                <Route exact path=\"/helloWorker\" component={WorkerDash} />\n                <Route exact path=\"/helloManager\" component={HelloManager} />\n                <Route exact path=\"/helloManager/newJob\" component={NewJobForm} />\n              </div>\n              <Footer />\n            </div>\n          </Router>\n        </Provider>\n      </div>\n    )\n  };\n\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nmodule.exports = isEmpty;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}