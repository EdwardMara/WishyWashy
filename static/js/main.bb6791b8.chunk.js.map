{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","utils/WorkerRoute.js","utils/ManagerRoute.js","components/Footer.js","components/Landing.js","components/TextFieldGroup.js","components/RegisterWorker.js","components/RegisterManager.js","components/LoginWorker.js","components/LoginManager.js","components/HelloWorker.js","utils/API.js","components/List/index.js","components/HelloManager.js","components/LoginNavbar.js","components/WorkerDash.js","components/NewJobForm.js","components/workerListItem/index.js","components/workersList.js","App.js","serviceWorker.js","index.js","img/wishywashylogo.png","utils/isEmpty.js","logo.svg"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","initialState","isAuthenticated","isWorker","isManager","user","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","isEmpty","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","Footer","className","Date","getFullYear","href","Landing","react_router_dom","TextFieldGroup","name","placeholder","value","error","info","onChange","disabled","for","charAt","toUpperCase","slice","id","classnames","is-invalid","defaultProps","RegisterWorker","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firstName","lastName","address","phone","email","password","password2","docs","bind","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","preventDefault","newWorker","registerWorker","history","noValidate","components_TextFieldGroup","filestack_react_default","apikey","componentDisplayMode","customText","customClass","onSuccess","res","console","log","data","dispatch","post","then","push","catch","err","response","withRouter","RegisterManager","companyName","image","newManager","registerManager","_this2","imageUrl","filesUploaded","url","LoginWorker","evt","loginWorker","Button","Link","raised","sessionStorage","setItem","jwt_decode","LoginManager","loginManager","localStorage","HelloWorker","API","getJoblist","get","postJob","object","getManager","concat","takeJob","jobid","workerid","getWorker","workerGrab","jobFill","job","put","deleteJob","delete","List","children","ListItem","src","img","height","width","alt","position","pay","hours","HelloManager","manager","Jobs","handleInputChange","event","onChanges","handleFormSubmit","getItem","_this3","min","max","map","key","indentifier","logo","Navbar","logout","authLinks","onClick","onLogoutClick","style","margin","display","removeItem","WorkerDash","jobs","jobList","worker","loadJobs","handleOnClick","identifier","Manager","handleClick","NewJobForm","ManagerId","window","location","message","WorkerUList","WorkerListItem","WorkerList","jobId","match","params","Workers","filled","App","role","es","basename","process","LoginNavbar","exact","path","propTypes","PropTypes","isRequired","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p","keys","trim"],"mappings":"wSAaeA,EAXM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAI1CC,IAAMC,SAASC,QAAQC,OAAvB,eC6EEC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KCtF4B,mBDuF5BC,QAASF,oDErFPG,EAAe,CACnBC,iBAAiB,EACjBC,UAAU,EACVC,WAAW,EACXC,KAAM,ICNFJ,EAAe,GCENK,cAAgB,CAC7BC,KFMa,WAAwC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBR,EAAcW,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOb,MACb,IDX4B,mBCY1B,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEN,iBAAkBa,IAAQH,EAAOZ,SACjCG,SAAUS,EAAOZ,QAAQG,SACzBC,UAAWQ,EAAOZ,QAAQI,UAC1BC,KAAMO,EAAOZ,UAEjB,QACE,OAAOQ,IEhBXQ,ODFa,WAAuC,IAA9BR,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBR,EAAcW,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOb,MACb,IFNsB,aEOpB,OAAOa,EAAOZ,QAChB,IFPwB,eEQtB,MAAO,GACT,QACE,OAAOQ,MELPS,EAAa,CAACC,KAsBLC,EApBDC,YACZC,EALmB,GAOnBC,YACEC,IAAeC,WAAf,EAAmBP,gBCcRQ,YAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CArBM,SAAAC,GAAA,IAAcC,EAAdD,EAAGE,UAAsBrB,EAAzBmB,EAAyBnB,KAASsB,EAAlChB,OAAAiB,EAAA,EAAAjB,CAAAa,EAAA,6BACnBK,EAAAC,EAAAC,cAACC,EAAA,EAADrB,OAAAsB,OAAA,GACMN,EADN,CAEEO,OAAQ,SAAAC,GAAK,OACe,IAAzB9B,EAAKL,kBAA8C,IAAlBK,EAAKJ,SACrC4B,EAAAC,EAAAC,cAACN,EAAcU,GAEfN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUI,GAAG,uBCcNb,YAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CArBM,SAAAC,GAAA,IAAcC,EAAdD,EAAGE,UAAsBrB,EAAzBmB,EAAyBnB,KAASsB,EAAlChB,OAAAiB,EAAA,EAAAjB,CAAAa,EAAA,6BACnBK,EAAAC,EAAAC,cAACC,EAAA,EAADrB,OAAAsB,OAAA,GACMN,EADN,CAEEO,OAAQ,SAAAC,GAAK,OACe,IAAzB9B,EAAKL,kBAA+C,IAAnBK,EAAKH,UACrC2B,EAAAC,EAAAC,cAACN,EAAcU,GAEfN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUI,GAAG,8BCVNC,EAAA,WACX,OACIR,EAAAC,EAAAC,cAAA,UAAQO,UAAY,wBAChBT,EAAAC,EAAAC,cAAA,4BACmB,IAAIQ,MAAOC,cAD9B,gBAGAX,EAAAC,EAAAC,cAAA,KAAGU,KAAK,uBAAR,wBCHNC,gOAKF,OACEb,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,uCACbT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAG,eAAeE,UAAU,uBAAlC,gBAGAT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAG,gBAAgBE,UAAU,uBAAnC,2BAZUb,aA8BPF,cAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CAAyBmB,oCC/BlCE,EAAiB,SAAApB,GASjB,IARJqB,EAQIrB,EARJqB,KACAC,EAOItB,EAPJsB,YACAC,EAMIvB,EANJuB,MACAC,EAKIxB,EALJwB,MACAC,EAIIzB,EAJJyB,KACApD,EAGI2B,EAHJ3B,KACAqD,EAEI1B,EAFJ0B,SACAC,EACI3B,EADJ2B,SAEA,OACEtB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,uBACbT,EAAAC,EAAAC,cAAA,SAAOqB,IAAKP,GAAOA,EAAKQ,OAAO,GAAGC,cAAcT,EAAKU,MAAM,GAA3D,KACA1B,EAAAC,EAAAC,cAAA,SACElC,KAAMA,EACN2D,GAAIX,EACJP,UAAWmB,IAAW,+BAAgC,CACpDC,aAAcV,IAEhBF,YAAaA,EACbD,KAAMA,EACNE,MAAOA,EACPG,SAAUA,EACVC,SAAUA,IAEXF,GAAQpB,EAAAC,EAAAC,cAAA,SAAOO,UAAU,wBAAwBW,GACjDD,GAASnB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oBAAoBU,KAgBnDJ,EAAee,aAAe,CAC5B9D,KAAM,QAGO+C,yBCxCTgB,cACJ,SAAAA,IAAc,IAAAC,EAAA,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,KAAAH,IACZC,EAAAlD,OAAAqD,EAAA,EAAArD,CAAAoD,KAAApD,OAAAsD,EAAA,EAAAtD,CAAAiD,GAAAM,KAAAH,QACKzD,MAAQ,CACX6D,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,KAAM,GACN5D,OAAQ,IAGV+C,EAAKX,SAAWW,EAAKX,SAASyB,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IAChBA,EAAKgB,SAAWhB,EAAKgB,SAASF,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IAfJA,sIAqBYiB,GACpBA,EAAUhE,QACZiD,KAAKgB,SAAS,CAAEjE,OAAQgE,EAAUhE,0CAI7BkE,GACPjB,KAAKgB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAiBqE,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOnC,yCAGnCiC,GACPA,EAAEG,iBAEF,IAAMC,EAAY,CAChBjB,UAAWJ,KAAKzD,MAAM6D,UACtBC,SAAUL,KAAKzD,MAAM8D,SACrBC,QAASN,KAAKzD,MAAM+D,QACpBC,MAAOP,KAAKzD,MAAMgE,MAClBC,MAAOR,KAAKzD,MAAMiE,MAClBC,SAAUT,KAAKzD,MAAMkE,SACrBC,UAAWV,KAAKzD,MAAMmE,UACtBC,KAAMX,KAAKzD,MAAMoE,MAGnBX,KAAK5B,MAAMkD,eAAeD,EAAWrB,KAAK5B,MAAMmD,0CAGzC,IACCxE,EAAWiD,KAAKzD,MAAhBQ,OAER,OACEe,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,QAAMwD,YAAU,EAACV,SAAUd,KAAKc,SAAUvC,UAAU,cAClDT,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,aACZD,KAAK,YACLE,MAAOgB,KAAKzD,MAAM6D,UAClBjB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOqD,YAEhBtC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,YACZD,KAAK,WACLE,MAAOgB,KAAKzD,MAAM8D,SAClBlB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOsD,WAEhBvC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,UACZD,KAAK,UACLE,MAAOgB,KAAKzD,MAAM+D,QAClBnB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOuD,UAEhBxC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,QACZD,KAAK,QACLhD,KAAK,MACLkD,MAAOgB,KAAKzD,MAAMgE,MAClBpB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOwD,QAEhBzC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,QACZD,KAAK,QACLhD,KAAK,QACLkD,MAAOgB,KAAKzD,MAAMiE,MAClBrB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOyD,QAEhB1C,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,WACZD,KAAK,WACLhD,KAAK,WACLkD,MAAOgB,KAAKzD,MAAMkE,SAClBtB,SAAUa,KAAKb,SACfF,MAAOlC,EAAO0D,WAEhB3C,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,mBACZD,KAAK,YACLhD,KAAK,WACLkD,MAAOgB,KAAKzD,MAAMmE,UAClBvB,SAAUa,KAAKb,SACfF,MAAOlC,EAAO2D,YAEhB5C,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CACE4D,OAAQ,yBACRC,qBAAsB,CACpB9F,KAAM,SACN+F,WAAY,cACZC,YAAa,qBAEfC,UAAW,SAACC,GACVC,QAAQC,IAAIF,MAGhBlE,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,SAASyC,UAAU,+CA1HlBb,aA+IdF,cALS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGwB,CAAEuE,eXlJZ,SAACa,EAAMZ,GAAP,OAAmB,SAAAa,GAC/C5G,IACG6G,KAAK,gEAAiEF,GACtEG,KAAK,SAAAN,GAAG,OAAIT,EAAQgB,KAAK,kBACzBC,MAAM,SAAAC,GAAG,OACRL,EAAS,CACPtG,KCbkB,aDclBC,QAAS0G,EAAIC,SAASP,YW2If3E,CAA6CmF,YAAW9C,IC/IjE+C,cACJ,SAAAA,IAAc,IAAA9C,EAAA,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,KAAA4C,IACZ9C,EAAAlD,OAAAqD,EAAA,EAAArD,CAAAoD,KAAApD,OAAAsD,EAAA,EAAAtD,CAAAgG,GAAAzC,KAAAH,QACKzD,MAAQ,CACX6D,UAAW,GACXC,SAAU,GACVwC,YAAa,GACbvC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXoC,MAAO,GACP/F,OAAQ,IAGV+C,EAAKX,SAAWW,EAAKX,SAASyB,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IAChBA,EAAKgB,SAAWhB,EAAKgB,SAASF,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IAhBJA,sIAsBYiB,GACpBA,EAAUhE,QACZiD,KAAKgB,SAAS,CAAEjE,OAAQgE,EAAUhE,0CAI7BkE,GACPjB,KAAKgB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAiBqE,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOnC,yCAGnCiC,GACPA,EAAEG,iBAEF,IAAM2B,EAAa,CACjB3C,UAAWJ,KAAKzD,MAAM6D,UACtBC,SAAUL,KAAKzD,MAAM8D,SACrBwC,YAAa7C,KAAKzD,MAAMsG,YACxBvC,QAASN,KAAKzD,MAAM+D,QACpBC,MAAOP,KAAKzD,MAAMgE,MAClBC,MAAOR,KAAKzD,MAAMiE,MAClBC,SAAUT,KAAKzD,MAAMkE,SACrBC,UAAWV,KAAKzD,MAAMmE,UACtBoC,MAAO9C,KAAKzD,MAAMuG,OAGpBb,QAAQC,IAAIa,GAEZ/C,KAAK5B,MAAM4E,gBAAgBD,EAAY/C,KAAK5B,MAAMmD,0CAG3C,IAAA0B,EAAAjD,KACCjD,EAAWiD,KAAKzD,MAAhBQ,OAER,OACEe,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,QAAMwD,YAAU,EAACV,SAAUd,KAAKc,SAAUvC,UAAU,cAClDT,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,aACZD,KAAK,YACLE,MAAOgB,KAAKzD,MAAM6D,UAClBjB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOqD,YAEhBtC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,YACZD,KAAK,WACLE,MAAOgB,KAAKzD,MAAM8D,SAClBlB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOsD,WAEhBvC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,UACZD,KAAK,cACLE,MAAOgB,KAAKzD,MAAMsG,YAClB1D,SAAUa,KAAKb,SACfF,MAAOlC,EAAO8F,cAEhB/E,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,UACZD,KAAK,UACLE,MAAOgB,KAAKzD,MAAM+D,QAClBnB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOuD,UAEhBxC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,QACZD,KAAK,QACLhD,KAAK,MACLkD,MAAOgB,KAAKzD,MAAMgE,MAClBpB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOwD,QAEhBzC,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,QACZD,KAAK,QACLhD,KAAK,QACLkD,MAAOgB,KAAKzD,MAAMiE,MAClBrB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOyD,QAEhB1C,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,WACZD,KAAK,WACLhD,KAAK,WACLkD,MAAOgB,KAAKzD,MAAMkE,SAClBtB,SAAUa,KAAKb,SACfF,MAAOlC,EAAO0D,WAEhB3C,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,mBACZD,KAAK,YACLhD,KAAK,WACLkD,MAAOgB,KAAKzD,MAAMmE,UAClBvB,SAAUa,KAAKb,SACfF,MAAOlC,EAAO2D,YAEhB5C,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CACE4D,OAAQ,yBACRC,qBAAsB,CACpB9F,KAAM,SACN+F,WAAY,eACZC,YAAa,qBAEfC,UAAW,SAACC,GACVC,QAAQC,IAAIF,GACZ,IAAIkB,EAAWlB,EAAImB,cAAc,GAAGC,IACpCnB,QAAQC,IAAIgB,GACZD,EAAKjC,SAAS,CAAE8B,MAAOI,OAI3BpF,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,SAASyC,UAAU,+CAzIjBb,aA8JfF,cALS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGwB,CAAEiG,gBZpJX,SAACb,EAAMZ,GAAP,OAAmB,SAAAa,GAC9C5G,IACG6G,KAAK,iEAAkEF,GACvEG,KAAK,SAAAN,GAAG,OAAIT,EAAQgB,KAAK,mBACzBC,MAAM,SAAAC,GAAG,OACRL,EAAS,CACPtG,KC1BgB,aD2BhBC,QAAS0G,EAAIC,SAASP,YY6IjB3E,CAA8CmF,YAAWC,aC/JlES,cACJ,SAAAA,IAAc,IAAAvD,EAAA,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,KAAAqD,IACZvD,EAAAlD,OAAAqD,EAAA,EAAArD,CAAAoD,KAAApD,OAAAsD,EAAA,EAAAtD,CAAAyG,GAAAlD,KAAAH,QACKzD,MAAQ,CACXiE,MAAO,GACPC,SAAU,GACV1D,OAAQ,IAGV+C,EAAKX,SAAWW,EAAKX,SAASyB,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IAChBA,EAAKgB,SAAWhB,EAAKgB,SAASF,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IATJA,sIAeYiB,GACpBA,EAAUhE,QACZiD,KAAKgB,SAAS,CAAEjE,OAAQgE,EAAUhE,0CAI7BuG,GACPA,EAAIlC,iBAEJ,IAAMe,EAAO,CACX3B,MAAOR,KAAKzD,MAAMiE,MAClBC,SAAUT,KAAKzD,MAAMkE,UAGvBT,KAAK5B,MAAMmF,YAAYpB,EAAMnC,KAAK5B,MAAMmD,0CAGjCN,GACPjB,KAAKgB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAiBqE,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOnC,yCAGnC,IACCjC,EAAWiD,KAAKzD,MAAhBQ,OAER,OACEe,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,QAAM8C,SAAUd,KAAKc,SAAUvC,UAAU,cACvCT,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,gBACZD,KAAK,QACLhD,KAAK,QACLkD,MAAOgB,KAAKzD,MAAMiE,MAClBrB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOyD,QAGhB1C,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,WACZD,KAAK,WACLhD,KAAK,WACLkD,MAAOgB,KAAKzD,MAAMkE,SAClBtB,SAAUa,KAAKb,SACfF,MAAOlC,EAAO0D,WAEhB3C,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,WACZgC,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACE7F,UAAW8F,IAEXC,QAAM,EACNrF,GAAG,mBAEF,wBAtEOX,aA4FXF,cALS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGwB,CAAEwG,YbpEf,SAACpB,EAAMZ,GAAP,OAAmB,SAAAa,GAC5C5G,IACG6G,KAAK,6DAA8DF,GACnEG,KAAK,SAAAN,GAAO,IAEHzG,EAAUyG,EAAIG,KAAd5G,MAERoI,eAAeC,QAAQ,WAAYrI,GAEnCD,EAAaC,GAEb,IAAMM,EAAUgI,IAAWtI,GAE3B6G,EAASxG,EAAeC,IAExB0F,EAAQgB,KAAK,kBACZC,MAAM,SAAAC,GAAG,OACVL,EAAS,CACPtG,KCnDkB,aDoDlBC,QAAS0G,EAAIC,gBaiDNlF,CAA0CmF,YAAWU,ICzF9DS,cACJ,SAAAA,IAAc,IAAAhE,EAAA,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,KAAA8D,IACZhE,EAAAlD,OAAAqD,EAAA,EAAArD,CAAAoD,KAAApD,OAAAsD,EAAA,EAAAtD,CAAAkH,GAAA3D,KAAAH,QACKzD,MAAQ,CACXiE,MAAO,GACPC,SAAU,GACV1D,OAAQ,IAGV+C,EAAKX,SAAWW,EAAKX,SAASyB,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IAChBA,EAAKgB,SAAWhB,EAAKgB,SAASF,KAAdhE,OAAAiE,EAAA,EAAAjE,CAAAkD,IATJA,sIAeYiB,GACpBA,EAAUhE,QACZiD,KAAKgB,SAAS,CAAEjE,OAAQgE,EAAUhE,0CAI7BuG,GACPA,EAAIlC,iBAEJ,IAAMe,EAAO,CACX3B,MAAOR,KAAKzD,MAAMiE,MAClBC,SAAUT,KAAKzD,MAAMkE,UAGvBT,KAAK5B,MAAM2F,aAAa5B,EAAMnC,KAAK5B,MAAMmD,0CAGlCN,GACPjB,KAAKgB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAiBqE,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOnC,yCAGnC,IACCjC,EAAWiD,KAAKzD,MAAhBQ,OAER,OACEe,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,QAAM8C,SAAUd,KAAKc,SAAUvC,UAAU,cAEvCT,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,gBACZD,KAAK,QACLhD,KAAK,QACLkD,MAAOgB,KAAKzD,MAAMiE,MAClBrB,SAAUa,KAAKb,SACfF,MAAOlC,EAAOyD,QAGhB1C,EAAAC,EAAAC,cAACyD,EAAD,CACE1C,YAAY,WACZD,KAAK,WACLhD,KAAK,WACLkD,MAAOgB,KAAKzD,MAAMkE,SAClBtB,SAAUa,KAAKb,SACfF,MAAOlC,EAAO0D,WAEhB3C,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,SAASyC,UAAU,mCAC/BT,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACE7F,UAAW8F,IAEXC,QAAM,EACNrF,GAAG,oBAEF,wBAvEQX,aA8FZF,cALS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZS,OAAQR,EAAMQ,SAGwB,CAAEgH,adhDZ,SAAC5B,EAAMZ,GAAP,OAAmB,SAAAa,GAC7C5G,IACG6G,KAAK,8DAA+DF,GACpEG,KAAK,SAAAN,GAAO,IAEHzG,EAAUyG,EAAIG,KAAd5G,MAERyI,aAAaJ,QAAQ,WAAYrI,GAEjCD,EAAaC,GAEb,IAAMM,EAAUgI,IAAWtI,GAE3B6G,EAASxG,EAAeC,IAExB0F,EAAQgB,KAAK,mBAEdC,MAAM,SAAAC,GACLR,QAAQC,IAAIO,GAEZL,EAAS,CACPtG,KC/EgB,aDgFhBC,QAAS0G,EAAIC,gBc0BRlF,CAA2CmF,YAAWmB,ICrG/DG,iPAIsBlD,GACpBA,EAAUzE,MACZ0D,KAAKgB,SAAS,CAAE1E,KAAMyE,EAAUzE,wCAKlC2F,QAAQC,IAAIlC,KAAK5B,OADV,IAEC9B,EAAS0D,KAAK5B,MAAd9B,KAER,OACEwB,EAAAC,EAAAC,cAAA,4BACiB1B,EAAKF,KAAKoE,cAhBP9C,aCDXwG,ID+BA1G,YAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CAAyByG,GC/BzB,CACbE,WAAY,WACV,OAAO3I,IAAM4I,IAAI,qDAEnBC,QAAS,SAASC,GAChB,OAAO9I,IAAM6G,KAAK,qDAAsDiC,IAE1EC,WAAY,SAAS9E,GACnB,OAAOjE,IAAM4I,IAAN,4DAAAI,OAAsE/E,KAE/EgF,QAAS,SAASC,EAAOC,GACvB,OAAOnJ,IAAM4I,IAAN,oDAAAI,OAA8DE,EAA9D,KAAAF,OAAuEG,KAEhFC,UAAW,SAASnF,GAClB,OAAOjE,IAAM4I,IAAN,2DAAAI,OAAqE/E,KAE9EoF,WAAY,SAASpF,GACnB,OAAOjE,IAAM4I,IAAN,wDAAAI,OAAkE/E,KAE3EqF,QAAS,SAASC,GAChB,OAAOvJ,IAAMwJ,IAAN,mDAA8DD,IAEvEE,UAAW,SAASxF,GAClB,OAAOjE,IAAM0J,OAAN,sDAAAV,OAAmE/E,cCrBvE,SAAS0F,GAAT1H,GAA4B,IAAZ2H,EAAY3H,EAAZ2H,SACnB,OAAOtH,EAAAC,EAAAC,cAAA,WAASO,UAAU,qBACrB6G,GAIF,SAASC,GAASjH,GACrB,OACIN,EAAAC,EAAAC,cAAA,WAASO,UAAU,wCACfT,EAAAC,EAAAC,cAAA,KAAGO,UAAU,0CAA0CG,KAAK,MACxDZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oCACXT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mCACXT,EAAAC,EAAAC,cAAA,OAAKsH,IAAKlH,EAAMmH,IAAKC,OAAO,MAAMC,MAAM,MAAMlH,UAAU,SAASmH,IAAI,+BAEzE5H,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBACXT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,wCAAwCH,EAAMuH,UAC5D7H,EAAAC,EAAAC,cAAA,KAAGO,UAAU,mBACRH,EAAMkC,QACPxC,EAAAC,EAAAC,cAAA,WACCI,EAAMwH,IAHX,QAGqBxH,EAAMyH,MAH3B,UAKA/H,EAAAC,EAAAC,cAAA,KAAGO,UAAU,kBAAb,oDCjBlBuH,8MACJvJ,MAAQ,CACNwI,IAAK,IACLgB,QAAS,CAAEC,KAAM,OAoBnBC,kBAAoB,SAAAC,GAClBpG,EAAKkB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAiBsJ,EAAM/E,OAAOrC,KAAOoH,EAAM/E,OAAOnC,WAGpDmH,UAAY,SAAClF,GACXnB,EAAKkB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAiBqE,EAAEE,OAAOrC,KAAOmC,EAAEE,OAAOnC,WAG5CoH,iBAAmB,SAAAF,GACjBA,EAAM9E,iBAEN8C,GAAIe,UAAUnF,EAAKvD,MAAMwJ,QAAQC,KAAKlG,EAAKvD,MAAMwI,IAAM,GAAGtF,IAAI6C,KAC5DL,QAAQC,IAAI,YACZM,4FA9BgB,IAAAS,EAAAjD,KAClBgE,aAAaqC,QAAQ,YADH,IAEV/J,EAAS0D,KAAK5B,MAAd9B,KACR4H,GAAIK,WAAWjI,EAAKF,KAAKqD,IACtB6C,KAAK,SAACyD,GACL9C,EAAKjC,SAAS,CAAE+E,QAASA,EAAQ5D,OACjCF,QAAQC,IAAIe,EAAK1G,MAAMwJ,WAExBvD,0DAGqBzB,GACpBA,EAAUzE,MACZ0D,KAAKgB,SAAS,CAAE1E,KAAMyE,EAAUzE,wCAoB3B,IAAAgK,EAAAtG,KACC1D,EAAS0D,KAAK5B,MAAd9B,KAER,OACEwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAG,mBACPP,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,QAAM8C,SAAUd,KAAKoG,kBACnBtI,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOmB,SAAUa,KAAKmG,UAAWrK,KAAK,SAASgD,KAAK,MAAMyH,IAAI,IAAIC,IAAI,OACtE1I,EAAAC,EAAAC,cAAA,SAAOlC,KAAK,YAEbQ,EAAKL,gBACJ6B,EAAAC,EAAAC,cAACmH,GAAD,KACGnF,KAAKzD,MAAMwJ,QAAQC,KAAKS,IAAI,SAAA1B,GAC3B,OACEjH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAE,uBAAAmG,OAAyBO,EAAItF,KACnC3B,EAAAC,EAAAC,cAACqH,GAAD,CACEqB,IAAK3B,EAAItF,GACTkH,YAAa5B,EAAItF,GACjBkG,SAAUZ,EAAIY,SACdrF,QAASyE,EAAIzE,QACbsF,IAAKb,EAAIa,IACTC,MAAOd,EAAIc,MACXN,IAAKe,EAAK/J,MAAMwJ,QAAQjD,MAAQwD,EAAK/J,MAAMwJ,QAAQjD,MAAQ8D,WAMrE9I,EAAAC,EAAAC,cAAA,0DAvEiBN,aAsFZF,eAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CAAyBsI,ICvFlCe,yLACUvD,GACZA,EAAIlC,iBAEJpB,KAAK5B,MAAM0I,SACX9G,KAAK5B,MAAMmD,QAAQgB,KAAK,sCAGjB,IACCtG,EAAoB+D,KAAK5B,MAAM9B,KAA/BL,gBAEF8K,EACJjJ,EAAAC,EAAAC,cAAA,MAAIO,UAAU,sBACZT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,YACZT,EAAAC,EAAAC,cAAA,KAAGU,KAAK,IAAIsI,QAAUhH,KAAKiH,cAAcrG,KAAKZ,OAA9C,YAQJlC,EAAAC,EAAAC,cAAA,MAAIO,UAAU,sBACZT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,YACZT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAML,UAAU,WAAWF,GAAG,mBAA9B,oBAIFP,EAAAC,EAAAC,cAAA,MAAIO,UAAU,YACZT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAML,UAAU,WAAWF,GAAG,oBAA9B,qBAIFP,EAAAC,EAAAC,cAAA,MAAIO,UAAU,YACZT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAML,UAAU,WAAWF,GAAG,gBAA9B,iBAIFP,EAAAC,EAAAC,cAAA,MAAIO,UAAU,YACZT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAML,UAAU,WAAWF,GAAG,iBAA9B,mBAON,OACEP,EAAAC,EAAAC,cAAA,OAAKO,UAAU,6CACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAML,UAAU,eAAeF,GAAG,KAChCP,EAAAC,EAAAC,cAAA,OACEsH,IAAKsB,KACLM,MAAO,CAAEzB,MAAO,QAAS0B,OAAQ,OAAQC,QAAS,SAClD1B,IAAI,gBAIR5H,EAAAC,EAAAC,cAAA,OAAKO,UAAU,2BAA2BkB,GAAG,cAC1CxD,EAAkB8K,EAAY,aA1DtBrJ,aA2ENF,eAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAG0B,CAACwK,OnBUnB,kBAAM,SAAA1E,GAE1B4B,aAAaqD,WAAW,YAExB/L,GAAa,GAEb8G,EAASxG,EAAe,QmBhBX4B,CAAmCmF,YAAWkE,cCzEvDS,8MACF/K,MAAQ,CACJgL,QACAC,QAAS,GACTC,OAAQ,MAmBZC,SAAW,WACPxD,GAAIC,aACC7B,KAAK,SAAAN,GAAG,OACLlC,EAAKkB,SAAS,CAAEwG,QAASxF,EAAIG,SAEhCK,MAAM,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,QAGlCkF,cAAgB,SAAC5C,GACbb,GAAIO,QAAQM,EAAKjF,EAAKvD,MAAMkL,OAAOhI,IAClC6C,KACGL,QAAQC,IAAI,oBAEfM,4FA7Be,IAAAS,EAAAjD,KAChBA,KAAK0H,WADW,IAERpL,EAAS0D,KAAK5B,MAAd9B,KACR4H,GAAIU,UAAUtI,EAAKF,KAAKqD,IACvB6C,KAAK,SAACmF,GACLxE,EAAKjC,SAAS,CAAEyG,OAAQA,EAAOtF,SAEhCK,0DAGqBzB,GAClBA,EAAUzE,MACZ0D,KAAKgB,SAAS,CAAE1E,KAAMyE,EAAUzE,wCAqB7B,IAAAgK,EAAAtG,KACL,OACIlC,EAAAC,EAAAC,cAACmH,GAAD,KACKnF,KAAKzD,MAAMiL,QAAQf,IAAI,SAAA1B,GAEpB,OADA9C,QAAQC,IAAI6C,GAERjH,EAAAC,EAAAC,cAACqH,GAAD,CACIqB,IAAK3B,EAAItF,GACTmI,WAAY7C,EAAItF,GAChBkG,SAAUZ,EAAIY,SACdJ,IAAKR,EAAI8C,QAAQ/E,MAAQiC,EAAI8C,QAAQ/E,MAAQ8D,KAC7CtG,QAASyE,EAAIzE,QACbsF,IAAKb,EAAIa,IACTC,MAAOd,EAAIc,MACXiC,YAAaxB,EAAKqB,0BAtDrBjK,aAuEVF,eAJS,SAAAjB,GAAK,MAAK,CAC9BD,KAAMC,EAAMD,OAGDkB,CAAyB8J,IC5ElCS,8MACFxL,MAAQ,KAYR0J,kBAAoB,SAAAC,GAClBpG,EAAKkB,SAALpE,OAAAsE,EAAA,EAAAtE,CAAA,GAAgBsJ,EAAM/E,OAAOrC,KAAOoH,EAAM/E,OAAOnC,WAGnDoH,iBAAmB,SAAAF,GACjBA,EAAM9E,iBACNa,QAAQC,IAAIpC,EAAKvD,OAFS,IAGlBD,EAASwD,EAAK1B,MAAd9B,KACFyI,EAAM,CACVlC,YAAa/C,EAAKvD,MAAMsG,YACxB8C,SAAU7F,EAAKvD,MAAMoJ,SACrBrF,QAASR,EAAKvD,MAAM+D,QACpBsF,IAAK9F,EAAKvD,MAAMqJ,IAChBC,MAAO/F,EAAKvD,MAAMsJ,MAClBmC,UAAW1L,EAAKF,KAAKqD,IAEvByE,GAAIG,QAAQU,GACXzC,KAAK,SAAAN,GACJC,QAAQC,IAAIF,GACZiG,OAAOC,SAAShK,OAAO,mBAExBsE,MAAM,SAAAC,GAAG,OAAI3C,EAAKkB,SAAS,CAAE/B,MAAOwD,EAAI0F,mJA3BjBpH,GACpBA,EAAUzE,MACZ0D,KAAKgB,SAAS,CAAE1E,KAAMyE,EAAUzE,wCA8BpC,OACIwB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOqB,IAAI,eAAX,kBACAvB,EAAAC,EAAAC,cAAA,SAAOc,KAAK,cAAchD,KAAK,OAAOqD,SAAUa,KAAKiG,oBAAoBnI,EAAAC,EAAAC,cAAA,WACzEF,EAAAC,EAAAC,cAAA,SAAOqB,IAAI,YAAX,qBACAvB,EAAAC,EAAAC,cAAA,SAAOc,KAAK,WAAWhD,KAAK,OAAOqD,SAAUa,KAAKiG,oBAAoBnI,EAAAC,EAAAC,cAAA,WACtEF,EAAAC,EAAAC,cAAA,SAAOqB,IAAI,WAAX,aACAvB,EAAAC,EAAAC,cAAA,SAAOc,KAAK,UAAUhD,KAAK,OAAOqD,SAAUa,KAAKiG,oBAAoBnI,EAAAC,EAAAC,cAAA,WACrEF,EAAAC,EAAAC,cAAA,SAAOqB,IAAI,OAAX,SACAvB,EAAAC,EAAAC,cAAA,SAAOc,KAAK,MAAMhD,KAAK,OAAOqD,SAAUa,KAAKiG,oBAAoBnI,EAAAC,EAAAC,cAAA,WACjEF,EAAAC,EAAAC,cAAA,SAAOqB,IAAI,SAAX,WACAvB,EAAAC,EAAAC,cAAA,SAAOc,KAAK,QAAQhD,KAAK,OAAOqD,SAAUa,KAAKiG,oBAAoBnI,EAAAC,EAAAC,cAAA,WACnEF,EAAAC,EAAAC,cAAA,UAAQlC,KAAK,SAASkL,QAAShH,KAAKoG,kBAApC,mBApDS1I,aAsERF,eAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CAAyBuK,WCtEnC,SAASK,GAAT3K,GAAmC,IAAZ2H,EAAY3H,EAAZ2H,SAC1B,OAAOtH,EAAAC,EAAAC,cAAA,WAASO,UAAU,qBACrB6G,GAIF,SAASiD,GAAejK,GAC3B,OACIN,EAAAC,EAAAC,cAAA,WAASO,UAAU,wCACfT,EAAAC,EAAAC,cAAA,KAAGO,UAAU,0CAA0CG,KAAK,MACxDZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oCACXT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBACXT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,wCAAwCH,EAAMU,MAC5DhB,EAAAC,EAAAC,cAAA,KAAGO,UAAU,mBACRH,EAAMkC,QACPxC,EAAAC,EAAAC,cAAA,WACCI,EAAMoC,MACP1C,EAAAC,EAAAC,cAAA,WACCI,EAAMmC,OAEXzC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,kBAAb,gCCpBlB+J,8MACJ/L,MAAQ,CACNgM,MAAOzI,EAAK1B,MAAMoK,MAAMC,OAAOhJ,GAC/BsF,IAAK,CAAE2D,QAAS,OAgBlBf,cAAgB,WACd7H,EAAKvD,MAAMwI,IAAI4D,QAAS,EACxBzE,GAAIY,QAAQhF,EAAKvD,MAAMwI,KACtBzC,KAAKL,QAAQC,IAAI,oGAhBA,IAAAe,EAAAjD,KAClBkE,GAAIW,WAAW7E,KAAKzD,MAAMgM,OACvBjG,KAAK,SAACyC,GACL9B,EAAKjC,SAAS,CAAE+D,IAAKA,EAAI5C,2DAILpB,GACpBA,EAAUzE,MACZ0D,KAAKgB,SAAS,CAAE1E,KAAMyE,EAAUzE,wCAU3B,IAAAgK,EAAAtG,KACP,OACElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoK,GAAD,KACGpI,KAAKzD,MAAMwI,IAAI2D,QAAQjC,IAAI,SAAAgB,GAC1B,OACE3J,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAG,iBACPP,EAAAC,EAAAC,cAACqK,GAAD,CACEvJ,KAAM2I,EAAOrH,UAAY,IAAMqH,EAAOpH,SACtCC,QAASmH,EAAOnH,QAChBE,MAAOiH,EAAOjH,MACdD,MAAOkH,EAAOlH,MACdyG,QAAWV,EAAKqB,8BArCTjK,aAoDVF,eAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CAAyB8K,ICxBlCM,8MAGJrM,MAAQ,CACNsM,KAAM,qGAKkB9H,GACpBA,EAAUzE,MACZ0D,KAAKgB,SAAS,CAAE1E,KAAMyE,EAAUzE,wCAKlC,OACEwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAU5L,MAAOA,GACfY,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACAmK,SAAUC,eAERlL,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACiL,GAAD,MACAnL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,IAAIxL,UAAWgB,IACjCb,EAAAC,EAAAC,cAAA,OAAKO,UAAU,0BACbT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,kBAAkBxL,UAAWkC,IAC/C/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,mBAAmBxL,UAAWiF,IAChD9E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,eAAexL,UAAW0F,IAC5CvF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,gBAAgBxL,UAAWmG,IAC7ChG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,eAAexL,UAAW2J,KAC5CxJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,gBAAgBxL,UAAWmI,KAC7ChI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,kBAAkBxL,UAAWoK,KAC/CjK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiL,OAAK,EAACC,KAAK,0BAA0BxL,UAAW2K,MAEzDxK,EAAAC,EAAAC,cAACM,EAAD,iBAnCIZ,aA8ClBoI,GAAasD,UAAY,CACvB9M,KAAM+M,YAAU/E,OAAOgF,YAGzB,IAIe9L,eAJS,SAAAjB,GAAK,MAAK,CAChCD,KAAMC,EAAMD,OAGCkB,CAAyBoL,IC5EpBW,QACW,cAA7BtB,OAAOC,SAASsB,UAEe,UAA7BvB,OAAOC,SAASsB,UAEhBvB,OAAOC,SAASsB,SAAShB,MACvB,2DCVNiB,IAAStL,OAAQL,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAU5L,MAAOA,GAAOY,EAAAC,EAAAC,cAAC0L,GAAD,OAAoBC,SAASC,eAAe,SDyH/E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzH,KAAK,SAAA0H,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,6DCMxCH,EAAOC,QANS,SAAAnL,GAAK,YACTtC,IAAVsC,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BpC,OAAO0N,KAAKtL,GAAOvC,QAC/B,kBAAVuC,GAA8C,IAAxBA,EAAMuL,OAAO9N,wogBCJ7CyN,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.bb6791b8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  }\n  else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register Worker\nexport const registerWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/register', data)\n    .then(res => history.push('/loginWorker'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Register Manager\nexport const registerManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/register', data)\n      .then(res => history.push('/loginManager'))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  \n  // Login Worker - Get User Token\nexport const loginWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/login', data)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data;\n      // Set token to ls\n      sessionStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n\n      history.push('/helloWorker');\n    }).catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response\n      })\n    );\n};\n\n  // Login Manager - Get User Token\n  export const loginManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/login', data)\n      .then(res => {\n        // Save to localStorage\n        const { token } = res.data;\n        // Set token to ls\n        localStorage.setItem('jwtToken', token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n\n        history.push('/helloManager');\n      })\n      .catch(err => {\n        console.log(err);\n        \n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response\n        })\n      });\n  };\n  \n  // Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logout = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const FETCH_STARRED = 'FETCH_STARRED';\n\n","import isEmpty from '../utils/isEmpty';\n\nimport { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isWorker: false,\n  isManager: false,\n  user: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        isWorker: action.payload.isWorker,\n        isManager: action.payload.isManager,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case CLEAR_ERRORS:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\n\n// MUST COMMENT OUT BEFORE DEPLOYING\n// UNCOMMENT FOR CHROME DEV REDUX TOOL\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   compose(\n//     applyMiddleware(...middleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n\nexport default store;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst WorkereRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (auth.isAuthenticated === true && auth.isWorker === true) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/loginWorker\" />\n      )\n    }\n  />\n);\n\nWorkereRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(WorkereRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst ManagerRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (auth.isAuthenticated === true && auth.isManager === true) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/loginManager\" />\n      )\n    }\n  />\n);\n\nManagerRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(ManagerRoute);\n","import React from 'react';\n\nexport default () => {\n    return (\n        <footer className = \"mt-5 p-4 text-center\">\n            <p>\n            Copyright &copy; { new Date().getFullYear() } Wishy Washy\n            </p>\n            <a href='/termsAndConditions'>Terms &amp; Conditions</a>\n        </footer>\n    );\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Landing extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"text-center form-login landing-size\">\n            <Link to=\"/loginWorker\" className=\"btn starter-buttons\">\n              Worker Login\n            </Link>\n            <Link to=\"/loginManager\" className=\"btn starter-buttons\">\n              Manager Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div className=\"form-group clearfix\">\n      <label for={name}>{name.charAt(0).toUpperCase()+name.slice(1)}:</label>\n      <input\n        type={type}\n        id={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n};\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextFieldGroup;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerWorker } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport ReactFilestack from 'filestack-react';\n\n// TODO: push uploaded docs to array in state and update constructor for new worker\n\nclass RegisterWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      docs: [],\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newWorker = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      docs: this.state.docs\n    };\n\n    this.props.registerWorker(newWorker, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form noValidate onSubmit={this.onSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <ReactFilestack\n                  apikey={\"AC0wjdv5JTa3WfKjaU2wnz\"}\n                  componentDisplayMode={{\n                    type: 'button',\n                    customText: 'Upload Docs',\n                    customClass: 'some-custom-class'\n                  }}\n                  onSuccess={(res) => {\n                    console.log(res);\n                  }}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterWorker.propTypes = {\n  registerWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerWorker })(withRouter(RegisterWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport ReactFilestack from 'filestack-react';\n\n// TODO: link image url from filestack to state and manager constructor\n\nclass RegisterManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      companyName: \"\",\n      address: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      image: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newManager = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      companyName: this.state.companyName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      image: this.state.image\n    };\n\n    console.log(newManager)\n\n    this.props.registerManager(newManager, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form noValidate onSubmit={this.onSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Company\"\n                  name=\"companyName\"\n                  value={this.state.companyName}\n                  onChange={this.onChange}\n                  error={errors.companyName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <ReactFilestack\n                  apikey={\"AC0wjdv5JTa3WfKjaU2wnz\"}\n                  componentDisplayMode={{\n                    type: 'button',\n                    customText: 'Upload Image',\n                    customClass: 'some-custom-class'\n                  }}\n                  onSuccess={(res) => {\n                    console.log(res);\n                    let imageUrl = res.filesUploaded[0].url;\n                    console.log(imageUrl);\n                    this.setState({ image: imageUrl });\n                  }}\n                />\n\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterManager.propTypes = {\n  registerManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerManager })(withRouter(RegisterManager));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { loginWorker } from '../actions/authActions';\nimport TextFieldGroup from './TextFieldGroup';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nclass LoginWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginWorker(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form onSubmit={this.onSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\"/>\n                <Button\n                  component={Link}\n                  // className={classes.button}\n                  raised\n                  to=\"/registerWorker\"\n                >\n                  {'Register'}\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginWorker.propTypes = {\n  loginWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginWorker })(withRouter(LoginWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport { Link } from 'react-router-dom';\n// import { withStyles, createStyleSheet } from 'material-ui/styles';\n// import Typography from 'material-ui/Typography';\nimport Button from '@material-ui/core/Button';\n// import muiLogo from 'docs/src/assets/images/material-ui-logo.svg';\n\nclass LoginManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginManager(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form onSubmit={this.onSubmit} className=\"form-login\">\n\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                <Button\n                  component={Link}\n                  // className={classes.button}\n                  raised\n                  to=\"/registerManager\"\n                >\n                  {'Register'}\n                </Button>\n                {/* <a href=\"WishyWashy/registerManager\">Register</a> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginManager.propTypes = {\n  loginManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginManager })(withRouter(LoginManager));\n","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass HelloWorker extends Component {\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const { auth } = this.props;\n\n    return (\n      <div>\n        Hello Worker: {auth.user.email} \n      </div>\n    );\n  }\n}\n\nHelloWorker.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloWorker);\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getJoblist: function() {\n    return axios.get(\"https://wishywashy-api.herokuapp.com/api/joblist\");\n  },\n  postJob: function(object) {\n    return axios.post(\"https://wishywashy-api.herokuapp.com/api/createJob\", object);\n  },\n  getManager: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/manager/${id}`)\n  },\n  takeJob: function(jobid, workerid) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/takejob/${jobid}/${workerid}`)\n  },\n  getWorker: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/worker/${id}`)\n  },\n  workerGrab: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/job/workers/${id}`)\n  },\n  jobFill: function(job) {\n    return axios.put(`https://wishywashy-api.herokuapp.com/api/filljob`, job)\n  },\n  deleteJob: function(id) {\n    return axios.delete(`https://wishywashy-api.herokuapp.com/api/deletejob/${id}`)\n  }\n};","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function List({ children }) {\n    return <section className=\"mw7 center avenir\">\n        {children}\n        </section>\n}\n\nexport function ListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1 list-item\">\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                        <img src={props.img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of store/restaurant\" />\n                    </div>\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.position}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.pay} for {props.hours} hours\n          </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\nimport { List, ListItem } from \"./List\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport logo from '../img/wishywashylogo.png'\n\nclass HelloManager extends Component {\n  state = {\n    job: \"0\",\n    manager: { Jobs: [] }\n  }\n\n  componentDidMount() {\n    localStorage.getItem('jwtToken')\n    const { auth } = this.props;\n    API.getManager(auth.user.id)\n      .then((manager) => {\n        this.setState({ manager: manager.data })\n        console.log(this.state.manager)\n      })\n      .catch()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  onChanges = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    API.deleteJob(this.state.manager.Jobs[this.state.job - 1].id).then(\n      console.log('deleted')\n    ).catch()\n  }\n\n  render() {\n    const { auth } = this.props;\n\n    return (\n      <div>\n        <h2>Manager Dashboard</h2>\n        <Link to=\"/Manager/newJob\">\n          <button>Make a new Job!</button>\n        </Link>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Delete a job: </label>\n          <input onChange={this.onChanges} type=\"number\" name=\"job\" min=\"1\" max=\"99\" />\n          <input type=\"submit\"/>\n        </form>\n        {auth.isAuthenticated ?\n          <List>\n            {this.state.manager.Jobs.map(job => {\n              return (\n                <Link to={`/Manager/workerList/${job.id}`}>\n                  <ListItem\n                    key={job.id}\n                    indentifier={job.id}\n                    position={job.position}\n                    address={job.address}\n                    pay={job.pay}\n                    hours={job.hours}\n                    img={this.state.manager.image ? this.state.manager.image : logo}\n                  />\n                </Link>\n              )\n            })}\n          </List> :\n          <p>there was a problem loading your jobs</p>\n        }\n      </div>\n    );\n  }\n}\n\nHelloManager.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloManager);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n//import logo from '../../img/logo.png'\nimport logo from '../img/wishywashylogo.png'\n\nclass Navbar extends Component {\n  onLogoutClick(evt) {\n    evt.preventDefault();\n    \n    this.props.logout();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a href=\"/\" onClick={ this.onLogoutClick.bind(this) }>\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerWorker\">\n            Register Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerManager\">\n            Register Manager\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginWorker\">\n            Login Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginManager\">\n            Login Manager\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img\n              src={logo}\n              style={{ width: '200px', margin: 'auto', display: 'block' }}\n              alt=\"Loading...\"\n            />\n          </Link>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            {isAuthenticated ? authLinks : \"\"}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {logout})(withRouter(Navbar));\n","import React, { Component } from \"react\";\nimport { List, ListItem } from \"./List\";\n\nimport { connect } from 'react-redux';\n\nimport jobs from \"./jobs.json\";\nimport API from \"../utils/API\";\nimport logo from '../img/wishywashylogo.png'\n\n\n\nclass WorkerDash extends Component {\n    state = {\n        jobs,\n        jobList: [],\n        worker: {}\n    };\n    \n    componentDidMount() {\n        this.loadJobs();\n        const { auth } = this.props;\n        API.getWorker(auth.user.id)\n        .then((worker) => {\n          this.setState({ worker: worker.data })\n        })\n        .catch()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth) {\n          this.setState({ auth: nextProps.auth });\n        }\n      }\n\n    loadJobs = () => {\n        API.getJoblist()\n            .then(res =>\n                this.setState({ jobList: res.data })\n            )\n            .catch(err => console.log(err));\n    };\n\n    handleOnClick = (job)=>{\n        API.takeJob(job, this.state.worker.id)\n        .then(\n            console.log('connection made')\n        )\n        .catch()\n    }\n\n\n    render() {\n        return (\n            <List>\n                {this.state.jobList.map(job => {\n                    console.log(job)\n                    return (\n                        <ListItem\n                            key={job.id}\n                            identifier={job.id}\n                            position={job.position}\n                            img={job.Manager.image ? job.Manager.image : logo}\n                            address={job.address}\n                            pay={job.pay}\n                            hours={job.hours}\n                            handleClick={this.handleOnClick}\n                        />\n                    )\n                })}\n            </List>\n\n\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps)(WorkerDash);","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\n\nclass NewJobForm extends Component {\n    state = {\n    }\n  \n    componentDidMount() {\n    }\n  \n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth) {\n        this.setState({ auth: nextProps.auth });\n      }\n    }\n  \n    handleInputChange = event => {\n      this.setState({[event.target.name]: event.target.value})\n    }\n  \n    handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(this.state)\n      const { auth } = this.props;\n      const job = {\n        companyName: this.state.companyName,\n        position: this.state.position,\n        address: this.state.address,\n        pay: this.state.pay,\n        hours: this.state.hours,\n        ManagerId: auth.user.id\n      }\n      API.postJob(job)\n      .then(res => {\n        console.log(res)\n        window.location.assign('/helloManager')\n      })\n      .catch(err => this.setState({ error: err.message}))\n    }\n\n    render() {\n        \n    return (\n        <div>\n            <form>\n                <label for=\"companyName\">Company Name: </label>\n                <input name=\"companyName\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"position\">Position needed: </label>\n                <input name=\"position\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"address\">Address: </label>\n                <input name=\"address\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"pay\">Pay: </label>\n                <input name=\"pay\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <label for=\"hours\">Hours: </label>\n                <input name=\"hours\" type=\"text\" onChange={this.handleInputChange}/><br />\n                <button type=\"submit\" onClick={this.handleFormSubmit}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    )\n    }\n}\n\n\nNewJobForm.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  \n  export default connect(mapStateToProps)(NewJobForm);\n  \n","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function WorkerUList({ children }) {\n    return <section className=\"mw7 center avenir\">\n        {children}\n    </section>\n}\n\nexport function WorkerListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1 list-item\">\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.name}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.email}\n                            <br />\n                            {props.phone}\n                        </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}\n                                    // export function List() {\n                                    //     return (\n                                    //         <section className=\"mw7 center avenir\">\n                                    //             <h2 className=\"baskerville fw1 ph3 ph0-l\">Jobs</h2>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[0].img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[0].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[0].address}\n                                    //                                 <br />\n                                    //                                 {jobs[0].pay} for {jobs[0].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[1].img} height=\"200\" width=\"300\" className=\"db\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[1].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[1].address}\n                                    //                                 <br />\n                                    //                                 {jobs[1].pay} for {jobs[1].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[2].img} height=\"200\" width=\"300\" className=\"db\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[2].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[2].address}\n                                    //                                 <br />\n                                    //                                 {jobs[2].pay} for {jobs[2].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n\n                                    //         </section>\n                                    //     )\n                                    // }\n","import React, { Component } from \"react\";\nimport { WorkerUList, WorkerListItem } from \"./workerListItem\";\nimport { connect } from 'react-redux';\nimport API from \"../utils/API\";\nimport { Link } from 'react-router-dom';\n\nclass WorkerList extends Component {\n  state = {\n    jobId: this.props.match.params.id,\n    job: { Workers: [] }\n  }\n\n  componentDidMount() {\n    API.workerGrab(this.state.jobId)\n      .then((job) => {\n        this.setState({ job: job.data })\n      })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleOnClick = () => {\n    this.state.job.filled = true\n    API.jobFill(this.state.job)\n    .then(console.log('job updated'))\n  }\n\n  render() {\n    return (\n      <div>\n        <WorkerUList>\n          {this.state.job.Workers.map(worker => {\n            return (\n              <Link to=\"/helloManager\">\n                <WorkerListItem\n                  name={worker.firstName + \" \" + worker.lastName}\n                  address={worker.address}\n                  email={worker.email}\n                  phone={worker.phone}\n                  onClick = {this.handleOnClick()}\n                />\n              </Link>\n            )\n          })}\n        </WorkerUList>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(WorkerList);","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar/index';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logout } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport WorkerRoute from \"./utils/WorkerRoute\";\nimport ManagerRoute from \"./utils/ManagerRoute\";\n\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Footer from \"./components/Footer\";\nimport Landing from \"./components/Landing\";\nimport RegisterWorker from \"./components/RegisterWorker\";\nimport RegisterManager from \"./components/RegisterManager\";\nimport LoginWorker from \"./components/LoginWorker\";\nimport LoginManager from \"./components/LoginManager\";\nimport HelloWorker from \"./components/HelloWorker\";\nimport HelloManager from \"./components/HelloManager\";\nimport LoginNavbar from \"./components/LoginNavbar\"\nimport WorkerDash from \"./components/WorkerDash\"\nimport NewJobForm from \"./components/NewJobForm\"\nimport WorkerList from \"./components/workersList\"\n\n\nclass App extends Component {\n\n\n  state = {\n    role: \"employer\"\n  }\n  // control the role and render diferent page base on the role\n  // call to the backend  return from the db all the jobs\n  // update state jobs with the data comming from the db then you will render result\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Provider store={store}>\n          <Router\n          basename={process.env.PUBLIC_URL}\n          >\n            <div className=\"App site\">\n              <LoginNavbar />\n              <Route exact path=\"/\" component={Landing} />\n              <div className=\"container site-content\">\n                <Route exact path=\"/registerWorker\" component={RegisterWorker} />\n                <Route exact path=\"/registerManager\" component={RegisterManager} />\n                <Route exact path=\"/loginWorker\" component={LoginWorker} />\n                <Route exact path=\"/loginManager\" component={LoginManager} />\n                <Route exact path=\"/helloWorker\" component={WorkerDash} />\n                <Route exact path=\"/helloManager\" component={HelloManager} />\n                <Route exact path=\"/Manager/newJob\" component={NewJobForm} />\n                <Route exact path=\"/Manager/workerList/:id\" component={WorkerList} />\n              </div>\n              <Footer />\n            </div>\n          </Router>\n        </Provider>\n      </div>\n    )\n  };\n\n\n}\n\nHelloManager.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wishywashylogo.bc127b11.png\";","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nmodule.exports = isEmpty;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}