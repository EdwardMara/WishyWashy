{"version":3,"sources":["img/wishywashylogo.png","utils/isEmpty.js","img/dishpit.jpeg","img/potatos.jpeg","img/glasses.jpeg","utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","utils/WorkerRoute.js","utils/ManagerRoute.js","components/Footer.js","components/Landing.js","components/TextFieldGroup.js","components/RegisterWorker.js","components/RegisterManager.js","components/LoginWorker.js","components/LoginManager.js","utils/API.js","components/List/index.js","components/HelloManager.js","components/LoginNavbar.js","components/WorkerDash.js","components/NewJobForm.js","components/workerListItem/index.js","components/workersList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","value","undefined","Object","keys","length","trim","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","initialState","isAuthenticated","isWorker","isManager","user","combineReducers","auth","state","arguments","action","objectSpread","isEmpty","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","connect","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","Footer","className","Date","getFullYear","href","carStyle","width","margin","padding","carouselText","color","background","concat","marginBottom","fontSize","fontFamily","Landing","style","id","class","data-ride","src","dishpit","alt","prep","glasses","role","data-slide","aria-hidden","react_router_dom","TextFieldGroup","name","placeholder","error","info","onChange","disabled","for","charAt","toUpperCase","slice","classnames","is-invalid","defaultProps","RegisterWorker","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firstName","lastName","address","phone","email","password","password2","docs","bind","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","preventDefault","newWorker","registerWorker","history","noValidate","components_TextFieldGroup","filestack_react_default","apikey","componentDisplayMode","customText","customClass","onSuccess","res","console","log","data","dispatch","post","then","push","catch","err","response","withRouter","RegisterManager","companyName","image","newManager","registerManager","_this2","imageUrl","filesUploaded","url","LoginWorker","evt","loginWorker","Button","Link","raised","sessionStorage","setItem","jwt_decode","LoginManager","loginManager","localStorage","API","getJoblist","get","postJob","object","getManager","takeJob","jobid","workerid","getWorker","workerGrab","jobFill","job","put","deleteJob","delete","List","children","ListItem","onClick","handleClick","img","height","position","pay","hours","HelloManager","manager","Jobs","handleInputChange","event","onChanges","handleFormSubmit","getItem","_this3","map","key","indentifier","logo","Navbar","logout","authLinks","onLogoutClick","display","removeItem","WorkerDash","jobList","worker","loadJobs","handleOnClick","identifier","Manager","NewJobForm","ManagerId","window","location","message","WorkerUList","WorkerListItem","WorkerList","jobId","match","params","Workers","filled","handleDelete","App","es","basename","process","LoginNavbar","exact","path","propTypes","PropTypes","isRequired","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6dd019a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wishywashylogo.bc127b11.png\";","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nmodule.exports = isEmpty;\n","module.exports = __webpack_public_path__ + \"static/media/dishpit.2d872730.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/potatos.99012aeb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/glasses.6b534b18.jpeg\";","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  }\n  else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register Worker\nexport const registerWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/register', data)\n    .then(res => history.push('/loginWorker'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Register Manager\nexport const registerManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/register', data)\n      .then(res => history.push('/loginManager'))\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\n  \n  // Login Worker - Get User Token\nexport const loginWorker = (data, history) => dispatch => {\n  axios\n    .post('https://wishywashy-api.herokuapp.com/api/auth/worker/login', data)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data;\n      // Set token to ls\n      sessionStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n\n      history.push('/helloWorker');\n    }).catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response\n      })\n    );\n};\n\n  // Login Manager - Get User Token\n  export const loginManager = (data, history) => dispatch => {\n    axios\n      .post('https://wishywashy-api.herokuapp.com/api/auth/manager/login', data)\n      .then(res => {\n        // Save to localStorage\n        const { token } = res.data;\n        // Set token to ls\n        localStorage.setItem('jwtToken', token);\n        // Set token to Auth header\n        setAuthToken(token);\n        // Decode token to get user data\n        const decoded = jwt_decode(token);\n        // Set current user\n        dispatch(setCurrentUser(decoded));\n\n        history.push('/helloManager');\n      })\n      .catch(err => {\n        console.log(err);\n        \n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response\n        })\n      });\n  };\n  \n  // Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logout = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const FETCH_STARRED = 'FETCH_STARRED';\n\n","import isEmpty from '../utils/isEmpty';\n\nimport { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  isWorker: false,\n  isManager: false,\n  user: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        isWorker: action.payload.isWorker,\n        isManager: action.payload.isManager,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case CLEAR_ERRORS:\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n);\n\n\n// MUST COMMENT OUT BEFORE DEPLOYING\n// UNCOMMENT FOR CHROME DEV REDUX TOOL\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   compose(\n//     applyMiddleware(...middleware),\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n\nexport default store;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst WorkereRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (auth.isAuthenticated === true && auth.isWorker === true) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/loginWorker\" />\n      )\n    }\n  />\n);\n\nWorkereRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(WorkereRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst ManagerRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (auth.isAuthenticated === true && auth.isManager === true) ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/loginManager\" />\n      )\n    }\n  />\n);\n\nManagerRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(ManagerRoute);\n","import React from 'react';\n\nexport default () => {\n    return (\n        <footer className = \"p-4 text-center\">\n            <p>\n            Copyright &copy; { new Date().getFullYear() } Wishy Washy\n            </p>\n            <a href='/termsAndConditions'>Terms &amp; Conditions</a>\n        </footer>\n    );\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport logo from '../img/wishywashylogo.png';\nimport dishpit from '../img/dishpit.jpeg';\nimport prep from '../img/potatos.jpeg';\nimport glasses from '../img/glasses.jpeg';\nimport \"../reset.css\";\nimport { white } from 'material-ui/styles/colors';\n\n\nconst carStyle = {\n  width: '100%',\n  margin: 0,\n  padding: 0,\n};\n\nconst carouselText = {\n  color: 'white',\n  background: `rgba(${0}, ${0}, ${0}, ${.5})`,\n  padding: '10px',\n  marginBottom: '40%',\n  fontSize: '2em',\n  fontFamily: 'Manjari'\n};\n\nclass Landing extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={carStyle} id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n          <div class=\"carousel-inner\">\n            <div class=\"carousel-item active\">\n              <img class=\"d-block w-100\" src={dishpit} alt=\"First slide\" />\n              <div style={carouselText} class=\"carousel-caption col-sm-4\">\n                <h1>No call. No Show. No Problem.</h1>\n                <p>Essential personnel, when you need it</p>\n              </div>\n            </div>\n            <div class=\"carousel-item\">\n              <img class=\"d-block w-100\" src={prep} alt=\"Second slide\" />\n              <div style={carouselText} class=\"carousel-caption col-sm-3 d-none d-md-block\">\n                <h5>Ensure you're properly staffed for peak hours.</h5>\n                <p>Only pay for the hours you need.</p>\n              </div>\n            </div>\n            <div class=\"carousel-item\">\n              <img class=\"d-block w-100\" src={glasses} alt=\"Third slide\" />\n              <div style={carouselText}  class=\"carousel-caption col-sm-3 d-none d-md-block\">\n                <h5>Recruit dishwashers, prepcooks, and other BOH staff now!</h5>\n                \n              </div>\n            </div>\n          </div>\n          <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Previous</span>\n          </a>\n          <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </div>\n        {/* worker login */}\n        <div class=\"loginCard firstCard\">\n          <div class=\"loginButton\">\n            <Link to=\"/loginWorker\" className=\"btn starter-buttons\">\n              Worker Login\n            </Link>\n          </div>\n          <div class=\"loginContent rightJustify\">\n            <h1>Shift Applicants</h1>\n            <br />\n            <ul>\n              <li>Apply for a shift</li>\n              <li>Upload relevent documents</li>\n              <li>Make some dough</li>\n            </ul>\n          </div>\n        </div>\n        {/* Manager Login */}\n        <div class=\"loginCard\">\n          <div class=\"loginContent leftJustify\">\n            <h1>Managers</h1>\n            <br />\n            <ul>\n              <li>Post a shift</li>\n              <li>Review/approve potential applicants</li>\n              <li>Keep your business running smoothly</li>\n            </ul>\n          </div>\n          <div class=\"loginButton\" id=\"picture2\">\n            <Link to=\"/loginManager\" className=\"btn starter-buttons\">\n              Manager Login\n            </Link>\n          </div>\n        </div>\n        {/* <div className=\"row\">\n          <div className=\"text-center form-login landing-size\">\n            <Link to=\"/loginWorker\" className=\"btn starter-buttons\">\n              Worker Login\n            </Link>\n            <Link to=\"/loginManager\" className=\"btn starter-buttons\">\n              Manager Login\n            </Link>\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div className=\"form-group clearfix\">\n      <label for={name}>{name.charAt(0).toUpperCase()+name.slice(1)}:</label>\n      <input\n        type={type}\n        id={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n};\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextFieldGroup;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerWorker } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport ReactFilestack from 'filestack-react';\n\n// TODO: push uploaded docs to array in state and update constructor for new worker\n\nclass RegisterWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      address: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      docs: [],\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newWorker = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      docs: this.state.docs\n    };\n\n    this.props.registerWorker(newWorker, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form noValidate onSubmit={this.onSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <ReactFilestack\n                  apikey={\"AC0wjdv5JTa3WfKjaU2wnz\"}\n                  componentDisplayMode={{\n                    type: 'button',\n                    customText: 'Upload Docs',\n                    customClass: 'btn starter-buttons uploadImg'\n                  }}\n                  onSuccess={(res) => {\n                    console.log(res);\n                  }}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterWorker.propTypes = {\n  registerWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerWorker })(withRouter(RegisterWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport ReactFilestack from 'filestack-react';\n\n// TODO: link image url from filestack to state and manager constructor\n\nclass RegisterManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      companyName: \"\",\n      address: \"\",\n      phone: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      image: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newManager = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      companyName: this.state.companyName,\n      address: this.state.address,\n      phone: this.state.phone,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      image: this.state.image\n    };\n\n    console.log(newManager)\n\n    this.props.registerManager(newManager, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form noValidate onSubmit={this.onSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.onChange}\n                  error={errors.firstName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Last Name\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.onChange}\n                  error={errors.lastName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Company\"\n                  name=\"companyName\"\n                  value={this.state.companyName}\n                  onChange={this.onChange}\n                  error={errors.companyName}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.onChange}\n                  error={errors.address}\n                />\n                <TextFieldGroup\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  type=\"tel\"\n                  value={this.state.phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"password2\"\n                  type=\"password\"\n                  value={this.state.password2}\n                  onChange={this.onChange}\n                  error={errors.password2}\n                />\n                <ReactFilestack\n                  apikey={\"AC0wjdv5JTa3WfKjaU2wnz\"}\n                  componentDisplayMode={{\n                    type: 'button',\n                    customText: 'Upload Image',\n                    customClass: 'btn starter-buttons uploadImg'\n                  }}\n                  onSuccess={(res) => {\n                    console.log(res);\n                    let imageUrl = res.filesUploaded[0].url;\n                    console.log(imageUrl);\n                    this.setState({ image: imageUrl });\n                  }}\n                />\n\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegisterManager.propTypes = {\n  registerManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerManager })(withRouter(RegisterManager));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { loginWorker } from '../actions/authActions';\nimport TextFieldGroup from './TextFieldGroup';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nclass LoginWorker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginWorker(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form onSubmit={this.onSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\"/>\n                <Button\n                  component={Link}\n                  // className={classes.button}\n                  raised\n                  to=\"/registerWorker\"\n                >\n                  {'Register'}\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginWorker.propTypes = {\n  loginWorker: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginWorker })(withRouter(LoginWorker));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginManager } from \"../actions/authActions\";\nimport TextFieldGroup from \"./TextFieldGroup\";\nimport { Link } from 'react-router-dom';\n// import { withStyles, createStyleSheet } from 'material-ui/styles';\n// import Typography from 'material-ui/Typography';\nimport Button from '@material-ui/core/Button';\n// import muiLogo from 'docs/src/assets/images/material-ui-logo.svg';\n\nclass LoginManager extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginManager(data, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form onSubmit={this.onSubmit} className=\"form-login\">\n\n                <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                <Button\n                  component={Link}\n                  // className={classes.button}\n                  raised\n                  to=\"/registerManager\"\n                >\n                  {'Register'}\n                </Button>\n                {/* <a href=\"WishyWashy/registerManager\">Register</a> */}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLoginManager.propTypes = {\n  loginManager: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginManager })(withRouter(LoginManager));\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getJoblist: function() {\n    return axios.get(\"https://wishywashy-api.herokuapp.com/api/joblist\");\n  },\n  postJob: function(object) {\n    return axios.post(\"https://wishywashy-api.herokuapp.com/api/createJob\", object);\n  },\n  getManager: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/manager/${id}`)\n  },\n  takeJob: function(jobid, workerid) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/takejob/${jobid}/${workerid}`)\n  },\n  getWorker: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/profile/worker/${id}`)\n  },\n  workerGrab: function(id) {\n    return axios.get(`https://wishywashy-api.herokuapp.com/api/job/workers/${id}`)\n  },\n  jobFill: function(job) {\n    return axios.put(`https://wishywashy-api.herokuapp.com/api/filljob`, job)\n  },\n  deleteJob: function(id) {\n    return axios.delete(`https://wishywashy-api.herokuapp.com/api/deletejob/${id}`)\n  }\n};","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function List({ children }) {\n    return <section className=\"mw7 center avenir\">\n        {children}\n        </section>\n}\n\nexport function ListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1 list-item\" onClick={props.handleClick}>\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                        <img src={props.img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of store/restaurant\" />\n                    </div>\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.position}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.pay} for {props.hours} hours\n          </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}","\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\nimport { List, ListItem } from \"./List\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport logo from '../img/wishywashylogo.png'\n\nclass HelloManager extends Component {\n  state = {\n    job: \"0\",\n    manager: { Jobs: [] }\n  }\n\n  componentDidMount() {\n    localStorage.getItem('jwtToken')\n    const { auth } = this.props;\n    API.getManager(auth.user.id)\n      .then((manager) => {\n        this.setState({ manager: manager.data })\n        console.log(this.state.manager)\n      })\n      .catch()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  onChanges = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    API.deleteJob(this.state.manager.Jobs[this.state.job - 1].id).then(\n      console.log('deleted')\n    ).catch()\n  }\n\n  render() {\n    const { auth } = this.props;\n\n    return (\n      <div>\n        <Link to=\"/Manager/newJob\">\n          <button class=\"btn starter-buttons\">Make a new Job!</button>\n        </Link>\n        {auth.isAuthenticated ?\n          <List>\n            {this.state.manager.Jobs.map(job => {\n              return (\n                <Link to={`/Manager/workerList/${job.id}`}>\n                  <ListItem\n                    key={job.id}\n                    indentifier={job.id}\n                    position={job.position}\n                    address={job.address}\n                    pay={job.pay}\n                    hours={job.hours}\n                    img={this.state.manager.image ? this.state.manager.image : logo}\n                  />\n                </Link>\n              )\n            })}\n          </List> :\n          <div>\n            <p>Uh Oh! There was a problem loading your jobs. You may need to log in again.</p>\n\n            <Link to={\"/loginManager\"} className=\"btn starter-buttons\">\n              Manager Login\n          </Link>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nHelloManager.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(HelloManager);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n//import logo from '../../img/logo.png'\nimport logo from '../img/wishywashylogo.png'\n\nclass Navbar extends Component {\n  onLogoutClick(evt) {\n    evt.preventDefault();\n    \n    this.props.logout();\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <a href=\"/\" onClick={ this.onLogoutClick.bind(this) }>\n            Logout\n          </a>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerWorker\">\n            Register Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/registerManager\">\n            Register Manager\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginWorker\">\n            Login Worker\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/loginManager\">\n            Login Manager\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <img\n              src={logo}\n              style={{ width: '200px', margin: 'auto', display: 'block' }}\n              alt=\"Loading...\"\n            />\n          </Link>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            {isAuthenticated ? authLinks : \"\"}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {logout})(withRouter(Navbar));\n","import React, { Component } from \"react\";\nimport { List, ListItem } from \"./List\";\n\nimport { connect } from 'react-redux';\n\nimport API from \"../utils/API\";\nimport logo from '../img/wishywashylogo.png'\n\n\n\nclass WorkerDash extends Component {\n    state = {\n        jobList: [],\n        worker: {}\n    };\n    \n    componentDidMount() {\n        this.loadJobs();\n        const { auth } = this.props;\n        API.getWorker(auth.user.id)\n        .then((worker) => {\n          this.setState({ worker: worker.data })\n        })\n        .catch()\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth) {\n          this.setState({ auth: nextProps.auth });\n        }\n      }\n\n    loadJobs = () => {\n        API.getJoblist()\n            .then(res =>\n                this.setState({ jobList: res.data })\n            )\n            .catch(err => console.log(err));\n    };\n\n    handleOnClick = (job)=>{\n        API.takeJob(job, this.state.worker.id)\n        .then(\n            console.log('connection made')\n        )\n        .catch()\n    }\n\n\n    render() {\n        return (\n            <List>\n                {this.state.jobList.map(job => {\n                    console.log(job)\n                    return (\n                        <ListItem\n                            key={job.id}\n                            identifier={job.id}\n                            position={job.position}\n                            img={job.Manager.image ? job.Manager.image : logo}\n                            address={job.address}\n                            pay={job.pay}\n                            hours={job.hours}\n                            handleClick={this.handleOnClick(job.id)}\n                        />\n                    )\n                })}\n            </List>\n\n\n        )\n    }\n\n\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps)(WorkerDash);","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport API from '../utils/API';\nimport TextFieldGroup from \"./TextFieldGroup\";\n\nclass NewJobForm extends Component {\n  state = {\n  }\n\n  componentDidMount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(this.state)\n    const { auth } = this.props;\n    const job = {\n      companyName: this.state.companyName,\n      position: this.state.position,\n      address: this.state.address,\n      pay: this.state.pay,\n      hours: this.state.hours,\n      ManagerId: auth.user.id\n    }\n    API.postJob(job)\n      .then(res => {\n        console.log(res)\n        window.location.assign('/helloManager')\n      })\n      .catch(err => this.setState({ error: err.message }))\n  }\n\n  render() {\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <form noValidate onSubmit={this.handleFormSubmit} className=\"form-login\">\n                <TextFieldGroup\n                  placeholder=\"Company Name\"\n                  name=\"companyName\"\n                  value={this.state.companyName}\n                  onChange={this.handleInputChange}\n                />\n                <TextFieldGroup\n                  placeholder=\"Position\"\n                  name=\"position\"\n                  value={this.state.position}\n                  onChange={this.handleInputChange}\n                />\n                <TextFieldGroup\n                  placeholder=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.handleInputChange}\n                />\n                <TextFieldGroup\n                  placeholder=\"Pay (example: $15/hr)\"\n                  name=\"pay\"\n                  value={this.state.pay}\n                  onChange={this.handleInputChange}\n                />\n                <TextFieldGroup\n                  placeholder=\"Hours\"\n                  name=\"hours\"\n                  value={this.state.hours}\n                  onChange={this.handleInputChange}\n                />\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      // <div>\n      //     <form>\n      //         <label for=\"companyName\">Company Name: </label>\n      //         <input name=\"companyName\" type=\"text\" onChange={this.handleInputChange}/><br />\n      //         <label for=\"position\">Position needed: </label>\n      //         <input name=\"position\" type=\"text\" onChange={this.handleInputChange}/><br />\n      //         <label for=\"address\">Address: </label>\n      //         <input name=\"address\" type=\"text\" onChange={this.handleInputChange}/><br />\n      //         <label for=\"pay\">Pay: </label>\n      //         <input name=\"pay\" type=\"text\" onChange={this.handleInputChange}/><br />\n      //         <label for=\"hours\">Hours: </label>\n      //         <input name=\"hours\" type=\"text\" onChange={this.handleInputChange}/><br />\n      //         <button type=\"submit\" onClick={this.handleFormSubmit}>\n      //             Submit\n      //         </button>\n      //     </form>\n      // </div>\n    )\n  }\n}\n\n\nNewJobForm.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(NewJobForm);\n\n","import React from \"react\";\n// import \"./resetCss.css\";\nimport \"./style.css\";\n\n\n// This file exports both the List and ListItem components\nexport function WorkerUList({ children }) {\n    return <section className=\"mw7 center avenir\">\n        {children}\n    </section>\n}\n\nexport function WorkerListItem(props) {\n    return (\n        <article className=\"bt bb b--black-10 shadow-1 list-item\" onClick={props.handleClick}>\n            <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                <div className=\"flex flex-wrap-ns flex-column-ns\">\n                    <div className=\"w-100 w-60-ns pl3-ns\">\n                        <h1 className=\"f3 fw1 baskerville mt0 lh-title info\">{props.name}</h1>\n                        <p className=\"f6 f5-l lh-copy\">\n                            {props.address}\n                            <br />\n                            {props.email}\n                            <br />\n                            {props.phone}\n                        </p>\n                        <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                    </div>\n                </div>\n            </a>\n        </article>\n    )\n}\n                                    // export function List() {\n                                    //     return (\n                                    //         <section className=\"mw7 center avenir\">\n                                    //             <h2 className=\"baskerville fw1 ph3 ph0-l\">Jobs</h2>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[0].img} height=\"200\" width=\"300\" className=\"db pic\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[0].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[0].address}\n                                    //                                 <br />\n                                    //                                 {jobs[0].pay} for {jobs[0].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[1].img} height=\"200\" width=\"300\" className=\"db\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[1].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[1].address}\n                                    //                                 <br />\n                                    //                                 {jobs[1].pay} for {jobs[1].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n                                    //             <article className=\"bt bb b--black-10 shadow-1\">\n                                    //                 <a className=\"db pv4 ph3 ph0-l no-underline black dim\" href=\"#0\">\n                                    //                     <div className=\"flex flex-column flex-row-ns\">\n                                    //                         <div className=\"pr3-ns mb4 mb0-ns w-100 w-40-ns\">\n                                    //                             <img src={jobs[2].img} height=\"200\" width=\"300\" className=\"db\" alt=\"Photo of a dimly lit room with a computer interface terminal.\" />\n                                    //                         </div>\n                                    //                         <div className=\"w-100 w-60-ns pl3-ns\">\n                                    //                             <h1 className=\"f3 fw1 baskerville mt0 lh-title\">{jobs[2].position}</h1>\n                                    //                             <p className=\"f6 f5-l lh-copy\">\n                                    //                                 {jobs[2].address}\n                                    //                                 <br />\n                                    //                                 {jobs[2].pay} for {jobs[2].hours} hours\n                                    //           </p>\n                                    //                             <p className=\"f6 lh-copy mv0\">Restaurant name here</p>\n                                    //                         </div>\n                                    //                     </div>\n                                    //                 </a>\n                                    //             </article>\n\n                                    //         </section>\n                                    //     )\n                                    // }\n","import React, { Component } from \"react\";\nimport { WorkerUList, WorkerListItem } from \"./workerListItem\";\nimport { connect } from 'react-redux';\nimport API from \"../utils/API\";\nimport { Link } from 'react-router-dom';\nimport image from \"../img/wishywashylogo.png\";\n\nclass WorkerList extends Component {\n  state = {\n    jobId: this.props.match.params.id,\n    job: { Workers: [] }\n  }\n\n  componentDidMount() {\n    API.workerGrab(this.state.jobId)\n      .then((job) => {\n        this.setState({ job: job.data })\n        console.log(this.state.job)\n      })\n      \n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  handleOnClick = () => {\n    this.state.job.filled = true\n    API.jobFill(this.state.job)\n    .then(console.log('job updated'))\n  }\n\n  handleDelete = () => {\n    API.deleteJob(this.state.job.id).then(\n      console.log('deleted')\n    ).catch()\n  }\n\n  render() {\n    return (\n      <div>\n        <WorkerUList>\n          {this.state.job.Workers.map(worker => {\n            console.log(worker)\n            return (\n              <Link to=\"/helloManager\">\n                <WorkerListItem\n                  name={worker.firstName + \" \" + worker.lastName}\n                  address={worker.address}\n                  email={worker.email}\n                  phone={worker.phone}\n                  handleClick = {this.handleOnClick()}\n                  image={image}\n                />\n              </Link>\n            )\n          })}\n        </WorkerUList>\n        <Link to=\"/helloManager\">\n          <button className=\"btn starter-buttons\" handleClick={this.handleDelete()}>I want to delete this job.</button>\n        </Link>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(WorkerList);","\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logout } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport WorkerRoute from \"./utils/WorkerRoute\";\nimport ManagerRoute from \"./utils/ManagerRoute\";\n\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Footer from \"./components/Footer\";\nimport Landing from \"./components/Landing\";\nimport RegisterWorker from \"./components/RegisterWorker\";\nimport RegisterManager from \"./components/RegisterManager\";\nimport LoginWorker from \"./components/LoginWorker\";\nimport LoginManager from \"./components/LoginManager\";\nimport HelloManager from \"./components/HelloManager\";\nimport LoginNavbar from \"./components/LoginNavbar\"\nimport WorkerDash from \"./components/WorkerDash\"\nimport NewJobForm from \"./components/NewJobForm\"\nimport WorkerList from \"./components/workersList\"\n\n\nclass App extends Component {\n\n\n  state = {\n    role: \"employer\"\n  }\n  // control the role and render diferent page base on the role\n  // call to the backend  return from the db all the jobs\n  // update state jobs with the data comming from the db then you will render result\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth) {\n      this.setState({ auth: nextProps.auth });\n    }\n  }\n\n  render() {\n    return (\n      <div className = 'theSite'>\n        <Provider store={store}>\n          <Router\n          basename={process.env.PUBLIC_URL}\n          >\n            <div className=\"App site\">\n              <LoginNavbar />\n              <Route exact path=\"/\" component={Landing} />\n              <div className=\"container site-content\">\n                <Route exact path=\"/registerWorker\" component={RegisterWorker} />\n                <Route exact path=\"/registerManager\" component={RegisterManager} />\n                <Route exact path=\"/loginWorker\" component={LoginWorker} />\n                <Route exact path=\"/loginManager\" component={LoginManager} />\n                <Route exact path=\"/helloWorker\" component={WorkerDash} />\n                <Route exact path=\"/helloManager\" component={HelloManager} />\n                <Route exact path=\"/Manager/newJob\" component={NewJobForm} />\n                <Route exact path=\"/Manager/workerList/:id\" component={WorkerList} />\n              </div>\n              <Footer />\n            </div>\n          </Router>\n        </Provider>\n      </div>\n    )\n  };\n\n\n}\n\nHelloManager.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}